<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/index.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/index.tsx" />
              <option name="originalContent" value="import { Text, View, ScrollView, Image, StyleSheet } from &quot;react-native&quot;;&#10;import { Calendar } from &quot;react-native-calendars&quot;;&#10;import InteractionRiskGroups from &quot;../components/InteractionRiskGroups&quot;;&#10;import CircularGauge from &quot;../components/CircularGauge&quot;;&#10;import { Colors } from &quot;@/constants/Colors&quot;;&#10;import BottomNavigationBar from &quot;../components/BottomNavigationBar&quot;;&#10;import SearchBar from '../components/SearchBar';&#10;&#10;export default function Index() {&#10;  return (&#10;    &lt;View style={{ flex: 1, backgroundColor: Colors.light.background }}&gt;&#10;      &lt;ScrollView&#10;        style={styles.container}&#10;        contentContainerStyle={{ paddingBottom: 100 }}&#10;        showsVerticalScrollIndicator={false}&#10;      &gt;&#10;        {/* Header with Status Bar */}&#10;        &lt;View style={styles.header}&gt;&#10;          &lt;Text style={styles.headerTitle}&gt;PillLink&lt;/Text&gt;&#10;          &lt;View style={styles.headerIcons}&gt;&#10;            {/* 알림, 설정 아이콘 등 추가 가능 */}&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Search Bar */}&#10;        &lt;SearchBar /&gt;&#10;&#10;        {/* Greeting Text - 더 친근하고 명확하게 */}&#10;        &lt;View style={styles.greetingContainer}&gt;&#10;          &lt;Text style={styles.greetingText}&gt;&#10;            안녕하세요, &lt;Text style={styles.greetingHighlight}&gt;유은정님!&lt;/Text&gt;&#10;          &lt;/Text&gt;&#10;          &lt;Text style={styles.greetingSubtext}&gt;&#10;            오늘도 건강한 하루 되세요 ✨&#10;          &lt;/Text&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Quick Actions - 빠른 액션 버튼들 */}&#10;        &lt;View style={styles.quickActionsContainer}&gt;&#10;          &lt;View style={styles.quickActionCard}&gt;&#10;            &lt;Text style={styles.quickActionIcon}&gt;&lt;/Text&gt;&#10;            &lt;Text style={styles.quickActionText}&gt;복용 기록&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.quickActionCard}&gt;&#10;            &lt;Text style={styles.quickActionIcon}&gt;⏰&lt;/Text&gt;&#10;            &lt;Text style={styles.quickActionText}&gt;알림 설정&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.quickActionCard}&gt;&#10;            &lt;Text style={styles.quickActionIcon}&gt;&lt;/Text&gt;&#10;            &lt;Text style={styles.quickActionText}&gt;통계 보기&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Calendar Section */}&#10;        &lt;View style={styles.sectionContainer}&gt;&#10;          &lt;View style={styles.sectionHeader}&gt;&#10;            &lt;Text style={styles.sectionTitle}&gt;복용 캘린더&lt;/Text&gt;&#10;            &lt;Text style={styles.sectionSubtitle}&gt;이번 달 복용 현황&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;Calendar&#10;            style={styles.calendar}&#10;            markedDates={{&#10;              &quot;2024-06-10&quot;: { selected: true, selectedColor: Colors.light.primary },&#10;              &quot;2024-06-11&quot;: { marked: true, dotColor: Colors.light.danger },&#10;              &quot;2024-06-12&quot;: { marked: true, dotColor: Colors.light.secondary },&#10;              &quot;2024-06-13&quot;: { marked: true, dotColor: Colors.light.warning },&#10;            }}&#10;            theme={{&#10;              todayTextColor: Colors.light.primary,&#10;              arrowColor: Colors.light.primary,&#10;              selectedDayBackgroundColor: Colors.light.primary,&#10;              selectedDayTextColor: Colors.light.background,&#10;              monthTextColor: Colors.light.text,&#10;              textDayFontWeight: '500',&#10;              textMonthFontWeight: 'bold',&#10;              textDayHeaderFontWeight: '600',&#10;            }}&#10;          /&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Interaction Risk Section - 더 직관적인 디자인 */}&#10;        &lt;View style={styles.sectionContainer}&gt;&#10;          &lt;View style={styles.sectionHeader}&gt;&#10;            &lt;Text style={styles.sectionTitle}&gt;상호작용 안전도&lt;/Text&gt;&#10;            &lt;Text style={styles.sectionSubtitle}&gt;현재 복용 중인 약물들의 안전성&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.interactionRiskContent}&gt;&#10;            &lt;View style={styles.circularGaugeContainer}&gt;&#10;              &lt;CircularGauge percentage={79} size={100} /&gt;&#10;              &lt;Text style={styles.gaugeLabel}&gt;안전&lt;/Text&gt;&#10;            &lt;/View&gt;&#10;            &lt;View style={styles.interactionRiskGroupsWrapper}&gt;&#10;              &lt;InteractionRiskGroups /&gt;&#10;            &lt;/View&gt;&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Health News Section - 카드 디자인으로 개선 */}&#10;        &lt;View style={styles.sectionContainer}&gt;&#10;          &lt;View style={styles.sectionHeader}&gt;&#10;            &lt;Text style={styles.sectionTitle}&gt;건강 뉴스&lt;/Text&gt;&#10;            &lt;Text style={styles.sectionSubtitle}&gt;유은정님을 위한 맞춤 정보&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.newsCard}&gt;&#10;            &lt;View style={styles.newsImagePlaceholder}&gt;&#10;              &lt;Text style={styles.newsEmoji}&gt;&lt;/Text&gt;&#10;            &lt;/View&gt;&#10;            &lt;View style={styles.newsContent}&gt;&#10;              &lt;Text style={styles.newsTitle}&gt;겨울철 감기 예방을 위한 영양제 복용법&lt;/Text&gt;&#10;              &lt;Text style={styles.newsSubtitle}&gt;면역력 강화를 위한 비타민 D, C 섭취 가이드&lt;/Text&gt;&#10;              &lt;Text style={styles.newsDate}&gt;2시간 전&lt;/Text&gt;&#10;            &lt;/View&gt;&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;      &lt;/ScrollView&gt;&#10;      &lt;BottomNavigationBar /&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    paddingHorizontal: 16,&#10;    backgroundColor: Colors.light.background,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;    paddingTop: 50,&#10;    paddingBottom: 10,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 24,&#10;    fontWeight: 'bold',&#10;    color: Colors.light.primary,&#10;  },&#10;  headerIcons: {&#10;    flexDirection: 'row',&#10;    gap: 12,&#10;  },&#10;  greetingContainer: {&#10;    marginVertical: 16,&#10;  },&#10;  greetingText: {&#10;    fontSize: 20,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    marginBottom: 4,&#10;  },&#10;  greetingHighlight: {&#10;    color: Colors.light.primary,&#10;    fontWeight: 'bold',&#10;  },&#10;  greetingSubtext: {&#10;    fontSize: 14,&#10;    color: Colors.light.mediumGray,&#10;    fontWeight: '400',&#10;  },&#10;  quickActionsContainer: {&#10;    flexDirection: 'row',&#10;    justifyContent: 'space-between',&#10;    marginBottom: 24,&#10;    gap: 12,&#10;  },&#10;  quickActionCard: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    padding: 16,&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  quickActionIcon: {&#10;    fontSize: 24,&#10;    marginBottom: 8,&#10;  },&#10;  quickActionText: {&#10;    fontSize: 12,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    textAlign: 'center',&#10;  },&#10;  sectionContainer: {&#10;    marginBottom: 32,&#10;  },&#10;  sectionHeader: {&#10;    marginBottom: 16,&#10;  },&#10;  sectionTitle: {&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;    color: Colors.light.text,&#10;    marginBottom: 4,&#10;  },&#10;  sectionSubtitle: {&#10;    fontSize: 14,&#10;    color: Colors.light.mediumGray,&#10;    fontWeight: '400',&#10;  },&#10;  calendar: {&#10;    borderRadius: 16,&#10;    backgroundColor: '#fff',&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  interactionRiskContent: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    padding: 20,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  circularGaugeContainer: {&#10;    alignItems: 'center',&#10;    marginRight: 20,&#10;  },&#10;  gaugeLabel: {&#10;    fontSize: 14,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    marginTop: 8,&#10;  },&#10;  interactionRiskGroupsWrapper: {&#10;    flex: 1,&#10;  },&#10;  newsCard: {&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    padding: 16,&#10;    flexDirection: 'row',&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  newsImagePlaceholder: {&#10;    width: 60,&#10;    height: 60,&#10;    borderRadius: 12,&#10;    backgroundColor: Colors.light.lightGray,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    marginRight: 16,&#10;  },&#10;  newsEmoji: {&#10;    fontSize: 24,&#10;  },&#10;  newsContent: {&#10;    flex: 1,&#10;    justifyContent: 'space-between',&#10;  },&#10;  newsTitle: {&#10;    fontSize: 16,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    marginBottom: 4,&#10;  },&#10;  newsSubtitle: {&#10;    fontSize: 14,&#10;    color: Colors.light.mediumGray,&#10;    lineHeight: 20,&#10;    marginBottom: 8,&#10;  },&#10;  newsDate: {&#10;    fontSize: 12,&#10;    color: Colors.light.mediumGray,&#10;    fontWeight: '500',&#10;  },&#10;  // 기존 스타일들 제거하고 위의 새로운 스타일들로 대체&#10;});" />
              <option name="updatedContent" value="import { Text, View, ScrollView, Image, StyleSheet } from &quot;react-native&quot;;&#10;import { Calendar } from &quot;react-native-calendars&quot;;&#10;import InteractionRiskGroups from &quot;../components/InteractionRiskGroups&quot;;&#10;import CircularGauge from &quot;../components/CircularGauge&quot;;&#10;import { Colors } from &quot;@/constants/Colors&quot;;&#10;import BottomNavigationBar from &quot;../components/BottomNavigationBar&quot;;&#10;import SearchBar from '../components/SearchBar';&#10;&#10;export default function Index() {&#10;  return (&#10;    &lt;View style={{ flex: 1, backgroundColor: Colors.light.background }}&gt;&#10;      &lt;ScrollView&#10;        style={styles.container}&#10;        contentContainerStyle={{ paddingBottom: 100 }}&#10;        showsVerticalScrollIndicator={false}&#10;      &gt;&#10;        {/* Header with Status Bar */}&#10;        &lt;View style={styles.header}&gt;&#10;          &lt;Text style={styles.headerTitle}&gt;PillLink&lt;/Text&gt;&#10;          &lt;View style={styles.headerIcons}&gt;&#10;            {/* 알림, 설정 아이콘 등 추가 가능 */}&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Search Bar */}&#10;        &lt;SearchBar /&gt;&#10;&#10;        {/* Greeting Text - 더 친근하고 명확하게 */}&#10;        &lt;View style={styles.greetingContainer}&gt;&#10;          &lt;Text style={styles.greetingText}&gt;&#10;            안녕하세요, &lt;Text style={styles.greetingHighlight}&gt;유은정님!&lt;/Text&gt;&#10;          &lt;/Text&gt;&#10;          &lt;Text style={styles.greetingSubtext}&gt;&#10;            오늘도 건강한 하루 되세요 ✨&#10;          &lt;/Text&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Quick Actions - 빠른 액션 버튼들 */}&#10;        &lt;View style={styles.quickActionsContainer}&gt;&#10;          &lt;View style={styles.quickActionCard}&gt;&#10;            &lt;Text style={styles.quickActionIcon}&gt;&lt;/Text&gt;&#10;            &lt;Text style={styles.quickActionText}&gt;복용 기록&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.quickActionCard}&gt;&#10;            &lt;Text style={styles.quickActionIcon}&gt;⏰&lt;/Text&gt;&#10;            &lt;Text style={styles.quickActionText}&gt;알림 설정&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.quickActionCard}&gt;&#10;            &lt;Text style={styles.quickActionIcon}&gt;&lt;/Text&gt;&#10;            &lt;Text style={styles.quickActionText}&gt;통계 보기&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Calendar Section */}&#10;        &lt;View style={styles.sectionContainer}&gt;&#10;          &lt;View style={styles.sectionHeader}&gt;&#10;            &lt;Text style={styles.sectionTitle}&gt;복용 캘린더&lt;/Text&gt;&#10;            &lt;Text style={styles.sectionSubtitle}&gt;이번 달 복용 현황&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;Calendar&#10;            style={styles.calendar}&#10;            markedDates={{&#10;              &quot;2024-06-10&quot;: { selected: true, selectedColor: Colors.light.primary },&#10;              &quot;2024-06-11&quot;: { marked: true, dotColor: Colors.light.danger },&#10;              &quot;2024-06-12&quot;: { marked: true, dotColor: Colors.light.secondary },&#10;              &quot;2024-06-13&quot;: { marked: true, dotColor: Colors.light.warning },&#10;            }}&#10;            theme={{&#10;              todayTextColor: Colors.light.primary,&#10;              arrowColor: Colors.light.primary,&#10;              selectedDayBackgroundColor: Colors.light.primary,&#10;              selectedDayTextColor: Colors.light.background,&#10;              monthTextColor: Colors.light.text,&#10;              textDayFontWeight: '500',&#10;              textMonthFontWeight: 'bold',&#10;              textDayHeaderFontWeight: '600',&#10;            }}&#10;          /&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Interaction Risk Section - 카드 형식 제거 */}&#10;        &lt;View style={styles.sectionContainer}&gt;&#10;          &lt;View style={styles.sectionHeader}&gt;&#10;            &lt;Text style={styles.sectionTitle}&gt;상호작용 안전도&lt;/Text&gt;&#10;            &lt;Text style={styles.sectionSubtitle}&gt;현재 복용 중인 약물들의 안전성&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.interactionRiskContent}&gt;&#10;            &lt;View style={styles.circularGaugeContainer}&gt;&#10;              &lt;CircularGauge percentage={79} size={100} /&gt;&#10;            &lt;/View&gt;&#10;            &lt;View style={styles.interactionRiskGroupsWrapper}&gt;&#10;              &lt;InteractionRiskGroups /&gt;&#10;            &lt;/View&gt;&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;&#10;        {/* Health News Section - 카드 디자인으로 개선 */}&#10;        &lt;View style={styles.sectionContainer}&gt;&#10;          &lt;View style={styles.sectionHeader}&gt;&#10;            &lt;Text style={styles.sectionTitle}&gt;건강 뉴스&lt;/Text&gt;&#10;            &lt;Text style={styles.sectionSubtitle}&gt;유은정님을 위한 맞춤 정보&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;View style={styles.newsCard}&gt;&#10;            &lt;View style={styles.newsImagePlaceholder}&gt;&#10;              &lt;Text style={styles.newsEmoji}&gt;&lt;/Text&gt;&#10;            &lt;/View&gt;&#10;            &lt;View style={styles.newsContent}&gt;&#10;              &lt;Text style={styles.newsTitle}&gt;겨울철 감기 예방을 위한 영양제 복용법&lt;/Text&gt;&#10;              &lt;Text style={styles.newsSubtitle}&gt;면역력 강화를 위한 비타민 D, C 섭취 가이드&lt;/Text&gt;&#10;              &lt;Text style={styles.newsDate}&gt;2시간 전&lt;/Text&gt;&#10;            &lt;/View&gt;&#10;          &lt;/View&gt;&#10;        &lt;/View&gt;&#10;      &lt;/ScrollView&gt;&#10;      &lt;BottomNavigationBar /&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    paddingHorizontal: 16,&#10;    backgroundColor: Colors.light.background,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;    paddingTop: 50,&#10;    paddingBottom: 10,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 24,&#10;    fontWeight: 'bold',&#10;    color: Colors.light.primary,&#10;  },&#10;  headerIcons: {&#10;    flexDirection: 'row',&#10;    gap: 12,&#10;  },&#10;  greetingContainer: {&#10;    marginVertical: 16,&#10;  },&#10;  greetingText: {&#10;    fontSize: 20,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    marginBottom: 4,&#10;  },&#10;  greetingHighlight: {&#10;    color: Colors.light.primary,&#10;    fontWeight: 'bold',&#10;  },&#10;  greetingSubtext: {&#10;    fontSize: 14,&#10;    color: Colors.light.mediumGray,&#10;    fontWeight: '400',&#10;  },&#10;  quickActionsContainer: {&#10;    flexDirection: 'row',&#10;    justifyContent: 'space-between',&#10;    marginBottom: 24,&#10;    gap: 12,&#10;  },&#10;  quickActionCard: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    padding: 16,&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  quickActionIcon: {&#10;    fontSize: 24,&#10;    marginBottom: 8,&#10;  },&#10;  quickActionText: {&#10;    fontSize: 12,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    textAlign: 'center',&#10;  },&#10;  sectionContainer: {&#10;    marginBottom: 32,&#10;  },&#10;  sectionHeader: {&#10;    marginBottom: 16,&#10;  },&#10;  sectionTitle: {&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;    color: Colors.light.text,&#10;    marginBottom: 4,&#10;  },&#10;  sectionSubtitle: {&#10;    fontSize: 14,&#10;    color: Colors.light.mediumGray,&#10;    fontWeight: '400',&#10;  },&#10;  calendar: {&#10;    borderRadius: 16,&#10;    backgroundColor: '#fff',&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  interactionRiskContent: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    // backgroundColor: '#fff', // 카드 배경색 제거&#10;    // borderRadius: 16, // 카드 라운드 제거&#10;    // padding: 20, // 카드 패딩 제거&#10;    // shadowColor: '#000', // 그림자 제거&#10;    // shadowOffset: { width: 0, height: 2 },&#10;    // shadowOpacity: 0.06,&#10;    // shadowRadius: 8,&#10;    // elevation: 2,&#10;  },&#10;  circularGaugeContainer: {&#10;    alignItems: 'center',&#10;    marginRight: 20,&#10;  },&#10;  interactionRiskGroupsWrapper: {&#10;    flex: 1,&#10;  },&#10;  newsCard: {&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    padding: 16,&#10;    flexDirection: 'row',&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  newsImagePlaceholder: {&#10;    width: 60,&#10;    height: 60,&#10;    borderRadius: 12,&#10;    backgroundColor: Colors.light.lightGray,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    marginRight: 16,&#10;  },&#10;  newsEmoji: {&#10;    fontSize: 24,&#10;  },&#10;  newsContent: {&#10;    flex: 1,&#10;    justifyContent: 'space-between',&#10;  },&#10;  newsTitle: {&#10;    fontSize: 16,&#10;    fontWeight: '600',&#10;    color: Colors.light.text,&#10;    marginBottom: 4,&#10;  },&#10;  newsSubtitle: {&#10;    fontSize: 14,&#10;    color: Colors.light.mediumGray,&#10;    lineHeight: 20,&#10;    marginBottom: 8,&#10;  },&#10;  newsDate: {&#10;    fontSize: 12,&#10;    color: Colors.light.mediumGray,&#10;    fontWeight: '500',&#10;  },&#10;  // 기존 스타일들 제거하고 위의 새로운 스타일들로 대체&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/BottomNavigationBar.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/BottomNavigationBar.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { View, StyleSheet, TouchableOpacity, Haptics } from 'react-native';&#10;import { MaterialCommunityIcons } from '@expo/vector-icons';&#10;import { useRouter } from 'expo-router';&#10;import { Colors } from '../constants/Colors';&#10;&#10;// 더 직관적인 아이콘들로 변경&#10;const icons = [&#10;  'home',&#10;  'pill',&#10;  'plus',&#10;  'message-text',&#10;  'account-circle',&#10;];&#10;&#10;const labels = ['홈', '약물관리', '추가', '채팅', '내정보'];&#10;&#10;export default function BottomNavigationBar({ activeIndex = 0, onTabPress }: { activeIndex?: number; onTabPress?: (idx: number) =&gt; void }) {&#10;  const router = useRouter();&#10;&#10;  const handleTabPress = async (idx: number) =&gt; {&#10;    // 햅틱 피드백 추가&#10;    try {&#10;      await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);&#10;    } catch (error) {&#10;      // 햅틱 피드백이 지원되지 않는 환경에서는 무시&#10;    }&#10;&#10;    if (onTabPress) onTabPress(idx);&#10;&#10;    // 라우팅 로직&#10;    switch (idx) {&#10;      case 0:&#10;        router.push('/');&#10;        break;&#10;      case 1:&#10;        // router.push('/medications');&#10;        break;&#10;      case 2:&#10;        // router.push('/add');&#10;        break;&#10;      case 3:&#10;        // router.push('/chat');&#10;        break;&#10;      case 4:&#10;        router.push('/myinfo');&#10;        break;&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {icons.map((icon, idx) =&gt; {&#10;        const isActive = activeIndex === idx;&#10;        const isCenter = idx === 2;&#10;&#10;        if (isCenter) {&#10;          return (&#10;            &lt;View key={idx} style={styles.centerCircleWrapper}&gt;&#10;              &lt;TouchableOpacity&#10;                style={[styles.centerCircle, isActive &amp;&amp; styles.centerCircleActive]}&#10;                onPress={() =&gt; handleTabPress(idx)}&#10;                activeOpacity={0.8}&#10;                accessibilityLabel={`${labels[idx]} 탭`}&#10;                accessibilityRole=&quot;button&quot;&#10;              &gt;&#10;                &lt;MaterialCommunityIcons&#10;                  name={icon}&#10;                  size={32}&#10;                  color={'#fff'}&#10;                /&gt;&#10;              &lt;/TouchableOpacity&gt;&#10;            &lt;/View&gt;&#10;          );&#10;        }&#10;&#10;        return (&#10;          &lt;TouchableOpacity&#10;            key={idx}&#10;            style={[styles.tab, isActive &amp;&amp; styles.activeTab]}&#10;            onPress={() =&gt; handleTabPress(idx)}&#10;            activeOpacity={0.6}&#10;            accessibilityLabel={`${labels[idx]} 탭`}&#10;            accessibilityRole=&quot;button&quot;&#10;          &gt;&#10;            &lt;MaterialCommunityIcons&#10;              name={icon}&#10;              size={26}&#10;              color={isActive ? Colors.light.primary : '#999'}&#10;              style={[styles.icon, isActive &amp;&amp; styles.activeIcon]}&#10;            /&gt;&#10;          &lt;/TouchableOpacity&gt;&#10;        );&#10;      })}&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flexDirection: 'row',&#10;    backgroundColor: '#fff',&#10;    borderTopLeftRadius: 24,&#10;    borderTopRightRadius: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: -4 },&#10;    shadowOpacity: 0.1,&#10;    shadowRadius: 12,&#10;    elevation: 12,&#10;    paddingBottom: 16, // 20에서 16으로 줄임&#10;    paddingTop: 8, // 12에서 8로 줄임&#10;    paddingHorizontal: 8, // 좌우 여백 추가&#10;    alignItems: 'center',&#10;    justifyContent: 'space-around',&#10;  },&#10;  tab: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingVertical: 8, // 12에서 8로 줄임&#10;    paddingHorizontal: 8, // 좌우 패딩 추가&#10;    borderRadius: 20, // 네비바 테두리와 조화되도록 증가&#10;    marginHorizontal: 2, // 탭 간 간격 추가&#10;  },&#10;  activeTab: {&#10;    backgroundColor: 'rgba(37, 99, 235, 0.12)', // 투명도 조금 증가&#10;    transform: [{ scale: 1.02 }], // 선택된 탭 살짝 확대&#10;  },&#10;  icon: {&#10;    marginBottom: 6, // 아이콘과 점 사이 간격 증가&#10;  },&#10;  activeIcon: {&#10;    // 추가 스타일 없음&#10;  },&#10;  centerCircleWrapper: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingHorizontal: 8, // 좌우 패딩 추가하여 다른 탭과 일관성&#10;  },&#10;  centerCircle: {&#10;    width: 64,&#10;    height: 64,&#10;    borderRadius: 32,&#10;    backgroundColor: '#007AFF', // iOS 스타일 파란색&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    shadowColor: '#007AFF',&#10;    shadowOffset: { width: 0, height: 8 },&#10;    shadowOpacity: 0.3,&#10;    shadowRadius: 16,&#10;    elevation: 12,&#10;    position: 'absolute',&#10;    top: -40,&#10;  },&#10;  centerCircleActive: {&#10;    backgroundColor: '#0051D0', // 더 진한 파란색&#10;    transform: [{ scale: 1.05 }],&#10;    shadowOpacity: 0.4,&#10;  },&#10;});" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, StyleSheet, TouchableOpacity, Haptics } from 'react-native';&#10;import { MaterialCommunityIcons } from '@expo/vector-icons';&#10;import { useRouter } from 'expo-router';&#10;import { Colors } from '../constants/Colors';&#10;&#10;// 더 직관적인 아이콘들로 변경&#10;const icons = [&#10;  'home',&#10;  'pill',&#10;  'plus',&#10;  'message-text',&#10;  'account-circle',&#10;];&#10;&#10;const labels = ['홈', '약물관리', '추가', '채팅', '내정보'];&#10;&#10;export default function BottomNavigationBar({ activeIndex = 0, onTabPress }: { activeIndex?: number; onTabPress?: (idx: number) =&gt; void }) {&#10;  const router = useRouter();&#10;&#10;  const handleTabPress = async (idx: number) =&gt; {&#10;    // 햅틱 피드백 추가&#10;    try {&#10;      await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);&#10;    } catch (error) {&#10;      // 햅틱 피드백이 지원되지 않는 환경에서는 무시&#10;    }&#10;&#10;    if (onTabPress) onTabPress(idx);&#10;&#10;    // 라우팅 로직&#10;    switch (idx) {&#10;      case 0:&#10;        router.push('/');&#10;        break;&#10;      case 1:&#10;        // router.push('/medications');&#10;        break;&#10;      case 2:&#10;        // router.push('/add');&#10;        break;&#10;      case 3:&#10;        // router.push('/chat');&#10;        break;&#10;      case 4:&#10;        router.push('/myinfo');&#10;        break;&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {icons.map((icon, idx) =&gt; {&#10;        const isActive = activeIndex === idx;&#10;        const isCenter = idx === 2;&#10;&#10;        if (isCenter) {&#10;          return (&#10;            &lt;View key={idx} style={styles.centerCircleWrapper}&gt;&#10;              &lt;TouchableOpacity&#10;                style={[styles.centerCircle, isActive &amp;&amp; styles.centerCircleActive]}&#10;                onPress={() =&gt; handleTabPress(idx)}&#10;                activeOpacity={0.8}&#10;                accessibilityLabel={`${labels[idx]} 탭`}&#10;                accessibilityRole=&quot;button&quot;&#10;              &gt;&#10;                &lt;MaterialCommunityIcons&#10;                  name={icon}&#10;                  size={32}&#10;                  color={'#fff'}&#10;                /&gt;&#10;              &lt;/TouchableOpacity&gt;&#10;            &lt;/View&gt;&#10;          );&#10;        }&#10;&#10;        return (&#10;          &lt;TouchableOpacity&#10;            key={idx}&#10;            style={[styles.tab, isActive &amp;&amp; styles.activeTab]}&#10;            onPress={() =&gt; handleTabPress(idx)}&#10;            activeOpacity={0.6}&#10;            accessibilityLabel={`${labels[idx]} 탭`}&#10;            accessibilityRole=&quot;button&quot;&#10;          &gt;&#10;            &lt;MaterialCommunityIcons&#10;              name={icon}&#10;              size={26}&#10;              color={isActive ? Colors.light.primary : '#999'}&#10;              style={[styles.icon, isActive &amp;&amp; styles.activeIcon]}&#10;            /&gt;&#10;          &lt;/TouchableOpacity&gt;&#10;        );&#10;      })}&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flexDirection: 'row',&#10;    backgroundColor: '#fff',&#10;    borderTopLeftRadius: 24,&#10;    borderTopRightRadius: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: -4 },&#10;    shadowOpacity: 0.1,&#10;    shadowRadius: 12,&#10;    elevation: 12,&#10;    paddingBottom: 20, // 16에서 20으로 증가&#10;    paddingTop: 12, // 8에서 12로 증가&#10;    paddingHorizontal: 8,&#10;    alignItems: 'center',&#10;    justifyContent: 'space-around',&#10;  },&#10;  tab: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingVertical: 10, // 8에서 10으로 증가&#10;    paddingHorizontal: 8,&#10;    borderRadius: 20,&#10;    marginHorizontal: 2,&#10;  },&#10;  activeTab: {&#10;    backgroundColor: 'rgba(37, 99, 235, 0.12)', // 투명도 조금 증가&#10;    transform: [{ scale: 1.02 }], // 선택된 탭 살짝 확대&#10;  },&#10;  icon: {&#10;    marginBottom: 6, // 아이콘과 점 사이 간격 증가&#10;  },&#10;  activeIcon: {&#10;    // 추가 스타일 없음&#10;  },&#10;  centerCircleWrapper: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingHorizontal: 8, // 좌우 패딩 추가하여 다른 탭과 일관성&#10;  },&#10;  centerCircle: {&#10;    width: 64,&#10;    height: 64,&#10;    borderRadius: 32,&#10;    backgroundColor: '#007AFF', // iOS 스타일 파란색&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    shadowColor: '#007AFF',&#10;    shadowOffset: { width: 0, height: 8 },&#10;    shadowOpacity: 0.3,&#10;    shadowRadius: 16,&#10;    elevation: 12,&#10;    position: 'absolute',&#10;    top: -24, // -40에서 -24로 조정하여 적절한 높이로&#10;  },&#10;  centerCircleActive: {&#10;    backgroundColor: '#0051D0', // 더 진한 파란색&#10;    transform: [{ scale: 1.05 }],&#10;    shadowOpacity: 0.4,&#10;  },&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/CircularGauge.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/CircularGauge.tsx" />
              <option name="originalContent" value="import React from &quot;react&quot;;&#10;import { View, Text, StyleSheet } from &quot;react-native&quot;;&#10;import Svg, { Defs, Stop, LinearGradient, Path } from &quot;react-native-svg&quot;;&#10;import { Colors } from '@/constants/Colors';&#10;&#10;interface CircularGaugeProps {&#10;  percentage: number;&#10;  size?: number;&#10;  strokeWidth?: number;&#10;  pieGradientColors?: string[];&#10;  centerCircleColor?: string;&#10;  percentageTextColor?: string;&#10;  percentageTextSize?: number;&#10;  percentageTextWeight?: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';&#10;}&#10;&#10;export default function CircularGauge({&#10;  percentage,&#10;  size = 72,&#10;  strokeWidth = 12,&#10;  pieGradientColors = ['#BD0000', '#FF8282'], // Default gradient colors&#10;  centerCircleColor = Colors.light.background, // Default white&#10;  percentageTextColor = Colors.light.text, // Default dark text&#10;  percentageTextSize = 20, // Default font size&#10;  percentageTextWeight = 'bold', // Default font weight&#10;}: CircularGaugeProps) {&#10;  // 게이지의 중심과 반지름 계산&#10;  const center = size / 2;&#10;  const radius = center - strokeWidth / 2;&#10;&#10;  // 파이(피자) 모양 게이지를 위한 각도 계산&#10;  const startAngle = -90;&#10;  const endAngle = startAngle + (percentage / 100) * 360;&#10;  const bgPath = describeArc(center, center, radius, endAngle, startAngle + 360);&#10;  const radians = (deg: number) =&gt; (deg * Math.PI) / 180;&#10;  const describeArc = (cx: number, cy: number, r: number, startAngle: number, endAngle: number) =&gt; {&#10;    const start = {&#10;      x: cx + r * Math.cos(radians(startAngle)),&#10;      y: cy + r * Math.sin(radians(startAngle)),&#10;    };&#10;    const end = {&#10;      x: cx + r * Math.cos(radians(endAngle)),&#10;      y: cy + r * Math.sin(radians(endAngle)),&#10;    };&#10;    const largeArcFlag = endAngle - startAngle &lt;= 180 ? &quot;0&quot; : &quot;1&quot;;&#10;    return [&#10;      `M ${cx} ${cy}`,&#10;      `L ${start.x} ${start.y}`,&#10;      `A ${r} ${r} 0 ${largeArcFlag} 1 ${end.x} ${end.y}`,&#10;      &quot;Z&quot;,&#10;    ].join(&quot; &quot;);&#10;  };&#10;  const piePath = describeArc(center, center, radius, startAngle, endAngle);&#10;&#10;  return (&#10;    &lt;View style={[styles.container, { width: size, height: size, borderRadius: size / 2 }]}&gt;&#10;      &lt;Svg width={size} height={size} style={{ position: 'absolute' }}&gt;&#10;        &lt;Defs&gt;&#10;          {/* 밝은 부분이 절대적 상단(12시 방향)에 오도록 x1/y1=0.5,0 x2/y2=0.5,1로 설정 */}&#10;          &lt;LinearGradient id=&quot;strokeGradient&quot; x1=&quot;50%&quot; y1=&quot;0%&quot; x2=&quot;50%&quot; y2=&quot;100%&quot;&gt;&#10;            {pieGradientColors.map((color, index) =&gt; (&#10;              &lt;Stop key={index} offset={`${(index / (pieGradientColors.length - 1)) * 100}%`} stopColor={color} /&gt;&#10;            ))}&#10;          &lt;/LinearGradient&gt;&#10;        &lt;/Defs&gt;&#10;        {/* 비어있는 부분 배경 (회색) */}&#10;        &lt;Path&#10;          d={bgPath}&#10;          fill=&quot;#EFEFEF&quot;&#10;        /&gt;&#10;        {/* 파이 모양 게이지 */}&#10;        &lt;Path&#10;          d={piePath}&#10;          fill=&quot;url(#strokeGradient)&quot;&#10;        /&gt;&#10;      &lt;/Svg&gt;&#10;      {/* 중앙 흰색 원 */}&#10;      &lt;View style={{&#10;        position: 'absolute',&#10;        width: size * 0.6,&#10;        height: size * 0.6,&#10;        left: size * 0.2,&#10;        top: size * 0.2,&#10;        borderRadius: size * 0.3,&#10;        backgroundColor: centerCircleColor,&#10;        alignItems: 'center',&#10;        justifyContent: 'center',&#10;        shadowColor: Colors.light.text,&#10;        shadowOffset: { width: 0, height: 4 },&#10;        shadowOpacity: 0.22,&#10;        shadowRadius: 12,&#10;        elevation: 12,&#10;      }}&gt;&#10;        &lt;Text style={{&#10;          fontSize: percentageTextSize,&#10;          fontWeight: percentageTextWeight,&#10;          color: percentageTextColor,&#10;        }}&gt;{percentage}&lt;/Text&gt;&#10;      &lt;/View&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    overflow: 'hidden', // Clip content outside the rounded border&#10;  },&#10;});" />
              <option name="updatedContent" value="import React from &quot;react&quot;;&#10;import { View, Text, StyleSheet } from &quot;react-native&quot;;&#10;import Svg, { Defs, Stop, LinearGradient, Path } from &quot;react-native-svg&quot;;&#10;import { Colors } from '@/constants/Colors';&#10;&#10;interface CircularGaugeProps {&#10;  percentage: number;&#10;  size?: number;&#10;  strokeWidth?: number;&#10;  pieGradientColors?: string[];&#10;  centerCircleColor?: string;&#10;  percentageTextColor?: string;&#10;  percentageTextSize?: number;&#10;  percentageTextWeight?: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';&#10;}&#10;&#10;export default function CircularGauge({&#10;  percentage,&#10;  size = 72,&#10;  strokeWidth = 12,&#10;  pieGradientColors = ['#BD0000', '#FF8282'], // Default gradient colors&#10;  centerCircleColor = Colors.light.background, // Default white&#10;  percentageTextColor = Colors.light.text, // Default dark text&#10;  percentageTextSize = 20, // Default font size&#10;  percentageTextWeight = 'bold', // Default font weight&#10;}: CircularGaugeProps) {&#10;  // 게이지의 중심과 반지름 계산&#10;  const center = size / 2;&#10;  const radius = center - strokeWidth / 2;&#10;&#10;  // 파이(피자) 모양 게이지를 위한 각도 계산&#10;  const startAngle = -90;&#10;  const radians = (deg: number) =&gt; (deg * Math.PI) / 180;&#10;  const describeArc = (cx: number, cy: number, r: number, startAngle: number, endAngle: number) =&gt; {&#10;    const start = {&#10;      x: cx + r * Math.cos(radians(startAngle)),&#10;      y: cy + r * Math.sin(radians(startAngle)),&#10;    };&#10;    const end = {&#10;      x: cx + r * Math.cos(radians(endAngle)),&#10;      y: cy + r * Math.sin(radians(endAngle)),&#10;    };&#10;    const largeArcFlag = endAngle - startAngle &lt;= 180 ? &quot;0&quot; : &quot;1&quot;;&#10;    return [&#10;      `M ${cx} ${cy}`,&#10;      `L ${start.x} ${start.y}`,&#10;      `A ${r} ${r} 0 ${largeArcFlag} 1 ${end.x} ${end.y}`,&#10;      &quot;Z&quot;,&#10;    ].join(&quot; &quot;);&#10;  };&#10;  const endAngle = startAngle + (percentage / 100) * 360;&#10;  const piePath = describeArc(center, center, radius, startAngle, endAngle);&#10;  const bgPath = describeArc(center, center, radius, endAngle, startAngle + 360);&#10;&#10;  return (&#10;    &lt;View style={[styles.container, { width: size, height: size, borderRadius: size / 2 }]}&gt;&#10;      &lt;Svg width={size} height={size} style={{ position: 'absolute' }}&gt;&#10;        &lt;Defs&gt;&#10;          {/* 밝은 부분이 절대적 상단(12시 방향)에 오도록 x1/y1=0.5,0 x2/y2=0.5,1로 설정 */}&#10;          &lt;LinearGradient id=&quot;strokeGradient&quot; x1=&quot;50%&quot; y1=&quot;0%&quot; x2=&quot;50%&quot; y2=&quot;100%&quot;&gt;&#10;            {pieGradientColors.map((color, index) =&gt; (&#10;              &lt;Stop key={index} offset={`${(index / (pieGradientColors.length - 1)) * 100}%`} stopColor={color} /&gt;&#10;            ))}&#10;          &lt;/LinearGradient&gt;&#10;        &lt;/Defs&gt;&#10;        {/* 비어있는 부분 배경 (회색) */}&#10;        &lt;Path&#10;          d={bgPath}&#10;          fill=&quot;#EFEFEF&quot;&#10;        /&gt;&#10;        {/* 파이 모양 게이지 */}&#10;        &lt;Path&#10;          d={piePath}&#10;          fill=&quot;url(#strokeGradient)&quot;&#10;        /&gt;&#10;      &lt;/Svg&gt;&#10;      {/* 중앙 흰색 원 */}&#10;      &lt;View style={{&#10;        position: 'absolute',&#10;        width: size * 0.6,&#10;        height: size * 0.6,&#10;        left: size * 0.2,&#10;        top: size * 0.2,&#10;        borderRadius: size * 0.3,&#10;        backgroundColor: centerCircleColor,&#10;        alignItems: 'center',&#10;        justifyContent: 'center',&#10;        shadowColor: Colors.light.text,&#10;        shadowOffset: { width: 0, height: 4 },&#10;        shadowOpacity: 0.22,&#10;        shadowRadius: 12,&#10;        elevation: 12,&#10;      }}&gt;&#10;        &lt;Text style={{&#10;          fontSize: percentageTextSize,&#10;          fontWeight: percentageTextWeight,&#10;          color: percentageTextColor,&#10;        }}&gt;{percentage}&lt;/Text&gt;&#10;      &lt;/View&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    overflow: 'hidden', // Clip content outside the rounded border&#10;  },&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/CustomNavbar.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/CustomNavbar.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;&#10;// 네비바 아이콘 예시 (실제 경로에 맞게 수정 필요)&#10;const icons = [&#10;  require('../assets/images/home.png'),&#10;  require('../assets/images/search.png'),&#10;  require('../assets/images/plus.png'),&#10;  require('../assets/images/alert.png'),&#10;  require('../assets/images/user.png'),&#10;];&#10;&#10;const labels = ['홈', '검색', '추가', '알림', '내정보'];&#10;&#10;export default function CustomNavbar({ activeIndex = 0, onTabPress }: { activeIndex?: number; onTabPress?: (idx: number) =&gt; void }) {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {icons.map((icon, idx) =&gt; (&#10;        &lt;TouchableOpacity&#10;          key={idx}&#10;          style={[styles.tab, activeIndex === idx &amp;&amp; styles.activeTab]}&#10;          onPress={() =&gt; {&#10;            if (onTabPress) onTabPress(idx);&#10;            // router.push(...) 등 라우팅 처리 가능&#10;          }}&#10;          activeOpacity={0.7}&#10;        &gt;&#10;          &lt;Image source={icon} style={[styles.icon, activeIndex === idx &amp;&amp; styles.activeIcon]} /&gt;&#10;          &lt;Text style={[styles.label, activeIndex === idx &amp;&amp; styles.activeLabel]}&gt;{labels[idx]}&lt;/Text&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;      ))}&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flexDirection: 'row',&#10;    backgroundColor: '#fff',&#10;    borderTopLeftRadius: 24,&#10;    borderTopRightRadius: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: -2 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 8,&#10;    paddingBottom: 12,&#10;    paddingTop: 8,&#10;    paddingHorizontal: 8,&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;  },&#10;  tab: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingVertical: 4,&#10;    borderRadius: 16,&#10;  },&#10;  activeTab: {&#10;    backgroundColor: '#F5F5F5',&#10;  },&#10;  icon: {&#10;    width: 28,&#10;    height: 28,&#10;    marginBottom: 2,&#10;    opacity: 0.7,&#10;  },&#10;  activeIcon: {&#10;    opacity: 1,&#10;  },&#10;  label: {&#10;    fontSize: 12,&#10;    color: '#888',&#10;    fontWeight: '500',&#10;  },&#10;  activeLabel: {&#10;    color: '#222',&#10;    fontWeight: 'bold',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/InteractionRiskGroups.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/InteractionRiskGroups.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { View, Text, StyleSheet } from 'react-native';&#10;import { Colors } from '../constants/Colors';&#10;&#10;const InteractionRiskGroups = () =&gt; {&#10;  // Card data configuration&#10;  // Order: 중복, 위험, 안전&#10;  const groups = [&#10;    {&#10;      key: 'duplicate',&#10;      title: '중복',&#10;      count: '0건',&#10;      pillBg: Colors.light.primaryLight,&#10;      pillColor: Colors.light.primary,&#10;    },&#10;    {&#10;      key: 'risk',&#10;      title: '위험',&#10;      count: '0건',&#10;      pillBg: Colors.light.dangerLight,&#10;      pillColor: Colors.light.danger,&#10;    },&#10;    {&#10;      key: 'safe',&#10;      title: '안전',&#10;      count: '0건',&#10;      pillBg: Colors.light.secondaryLight,&#10;      pillColor: Colors.light.secondary,&#10;    },&#10;  ];&#10;  return (&#10;    &lt;View style={styles.groupsContainer}&gt;&#10;      {groups.map(({ key, title, count, pillBg, pillColor }) =&gt; (&#10;        &lt;View key={key} style={styles.groupCard}&gt;&#10;          &lt;View style={[styles.pill, { backgroundColor: pillBg }]}&gt;&#10;            &lt;Text style={[styles.pillText, { color: pillColor }]}&gt;{title}&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;Text style={styles.groupCount}&gt;{count}&lt;/Text&gt;&#10;        &lt;/View&gt;&#10;      ))}&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  groupsContainer: {&#10;    flexDirection: 'row',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;    width: '100%',&#10;    paddingHorizontal: 0,&#10;    marginVertical: 0,&#10;  },&#10;  groupCard: {&#10;    backgroundColor: Colors.light.background,&#10;    borderRadius: 12,&#10;    shadowColor: Colors.light.text,&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.1,&#10;    shadowRadius: 6,&#10;    elevation: 4,&#10;    paddingVertical: 16,&#10;    paddingHorizontal: 20,&#10;    alignItems: 'center',&#10;    flex: 1,&#10;    marginHorizontal: 4,&#10;  },&#10;  pill: {&#10;    borderRadius: 8,&#10;    paddingHorizontal: 8,&#10;    paddingVertical: 4,&#10;    marginBottom: 0,&#10;  },&#10;  pillText: {&#10;    fontSize: 14,&#10;    fontWeight: 'bold',&#10;  },&#10;  groupCount: {&#10;    fontSize: 14,&#10;    fontWeight: '500',&#10;    color: Colors.light.darkGray,&#10;    marginTop: 8,&#10;    backgroundColor: 'transparent',&#10;  },&#10;});&#10;&#10;export default InteractionRiskGroups;" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet } from 'react-native';&#10;import { Colors } from '../constants/Colors';&#10;&#10;const InteractionRiskGroups = () =&gt; {&#10;  // Card data configuration&#10;  // Order: 중복, 위험, 안전&#10;  const groups = [&#10;    {&#10;      key: 'duplicate',&#10;      title: '중복',&#10;      count: '0건',&#10;      pillBg: Colors.light.primaryLight,&#10;      pillColor: Colors.light.primary,&#10;    },&#10;    {&#10;      key: 'risk',&#10;      title: '위험',&#10;      count: '0건',&#10;      pillBg: Colors.light.dangerLight,&#10;      pillColor: Colors.light.danger,&#10;    },&#10;    {&#10;      key: 'safe',&#10;      title: '안전',&#10;      count: '0건',&#10;      pillBg: Colors.light.secondaryLight,&#10;      pillColor: Colors.light.secondary,&#10;    },&#10;  ];&#10;  return (&#10;    &lt;View style={styles.groupsContainer}&gt;&#10;      {groups.map(({ key, title, count, pillBg, pillColor }) =&gt; (&#10;        &lt;View key={key} style={styles.groupCard}&gt;&#10;          &lt;View style={[styles.pill, { backgroundColor: pillBg }]}&gt;&#10;            &lt;Text style={[styles.pillText, { color: pillColor }]}&gt;{title}&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;          &lt;Text style={styles.groupCount}&gt;{count}&lt;/Text&gt;&#10;        &lt;/View&gt;&#10;      ))}&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  groupsContainer: {&#10;    flexDirection: 'row',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;    gap: 12,&#10;    marginVertical: 8,&#10;  },&#10;  groupCard: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    backgroundColor: '#fff',&#10;    borderRadius: 20, // 더 둥글게&#10;    paddingVertical: 16,&#10;    marginHorizontal: 4,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 2 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  pill: {&#10;    borderRadius: 999,&#10;    paddingHorizontal: 16,&#10;    paddingVertical: 4,&#10;    marginBottom: 8,&#10;    minWidth: 48,&#10;    alignItems: 'center',&#10;  },&#10;  pillText: {&#10;    fontWeight: 'bold',&#10;    fontSize: 15,&#10;    letterSpacing: 0.5,&#10;  },&#10;  groupCount: {&#10;    fontWeight: 'bold',&#10;    fontSize: 18,&#10;    color: '#222',&#10;    marginTop: 2,&#10;  },&#10;});&#10;&#10;export default InteractionRiskGroups;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/SearchBar.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/SearchBar.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, TextInput, StyleSheet, Image } from 'react-native';&#10;import { Colors } from '../constants/Colors';&#10;&#10;export default function SearchBar({ value, onChangeText, placeholder = '복용하시는 약을 등록해보세요' }: {&#10;  value?: string;&#10;  onChangeText?: (text: string) =&gt; void;&#10;  placeholder?: string;&#10;}) {&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      &lt;Image&#10;        source={{ uri: 'https://img.icons8.com/ios-filled/50/888888/search--v1.png' }}&#10;        style={styles.icon}&#10;        resizeMode=&quot;contain&quot;&#10;      /&gt;&#10;      &lt;TextInput&#10;        style={styles.input}&#10;        placeholder={placeholder}&#10;        placeholderTextColor={Colors.light.mediumGray}&#10;        value={value}&#10;        onChangeText={onChangeText}&#10;        underlineColorAndroid=&quot;transparent&quot;&#10;      /&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#F5F6FA',&#10;    borderRadius: 16,&#10;    paddingHorizontal: 14,&#10;    paddingVertical: 10,&#10;    marginVertical: 8,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 1 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 4,&#10;    elevation: 2,&#10;  },&#10;  icon: {&#10;    width: 22,&#10;    height: 22,&#10;    marginRight: 8,&#10;    tintColor: '#888',&#10;  },&#10;  input: {&#10;    flex: 1,&#10;    fontSize: 16,&#10;    color: '#222',&#10;    paddingVertical: 0,&#10;    backgroundColor: 'transparent',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>