<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/components/CircularGauge.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/CircularGauge.tsx" />
              <option name="originalContent" value="import React from &quot;react&quot;;&#10;import { View } from &quot;react-native&quot;;&#10;import Svg, { Circle, Text as SvgText } from &quot;react-native-svg&quot;;&#10;&#10;interface Props {&#10;  percentage: number;&#10;  size?: number;&#10;  strokeWidth?: number;&#10;}&#10;&#10;export default function CircularGauge({&#10;                                        percentage,&#10;                                        size = 80,&#10;                                        strokeWidth = 8,&#10;                                      }: Props) {&#10;  const radius = (size - strokeWidth) / 2;&#10;  const circumference = 2 * Math.PI * radius;&#10;  const progress = circumference * (percentage / 100);&#10;  const gaugeShadowRadius = radius + strokeWidth * 0.75;&#10;  return (&#10;    &lt;View style={{&#10;      shadowColor: '#000',&#10;      shadowOffset: { width: 0, height: 4 },&#10;      shadowOpacity: 0.18,&#10;      shadowRadius: 8,&#10;      elevation: 8,&#10;      backgroundColor: 'transparent',&#10;      borderRadius: size / 2,&#10;      alignItems: 'center',&#10;      justifyContent: 'center',&#10;      padding: 8, // 컴포넌트가 잘리지 않도록 패딩 추가&#10;    }}&gt;&#10;      &lt;Svg width={size + 16} height={size + 16} style={{ overflow: 'visible' }}&gt;&#10;        {/* 게이지 그림자 효과 (흰색 부분 위에 흐릿한 그림자) */}&#10;        &lt;Circle&#10;          cx={(size + 16) / 2}&#10;          cy={(size + 16) / 2}&#10;          r={gaugeShadowRadius}&#10;          fill=&quot;none&quot;&#10;          stroke=&quot;#fff&quot;&#10;          strokeWidth={strokeWidth * 1.5}&#10;          opacity={0.7}&#10;          filter=&quot;url(#gaugeWhiteShadow)&quot;&#10;        /&gt;&#10;        {/* 흰색 배경 원 */}&#10;        &lt;Circle&#10;          cx={(size + 16) / 2}&#10;          cy={(size + 16) / 2}&#10;          r={radius}&#10;          fill=&quot;#fff&quot;&#10;        /&gt;&#10;        {/* 배경 원 */}&#10;        &lt;Circle&#10;          stroke=&quot;#eee&quot;&#10;          fill=&quot;none&quot;&#10;          cx={(size + 16) / 2}&#10;          cy={(size + 16) / 2}&#10;          r={radius}&#10;          strokeWidth={strokeWidth}&#10;        /&gt;&#10;        {/* 진행 원 (그라데이션 + 그림자) */}&#10;        &lt;Circle&#10;          stroke=&quot;url(#gaugeGradient)&quot;&#10;          fill=&quot;none&quot;&#10;          cx={(size + 16) / 2}&#10;          cy={(size + 16) / 2}&#10;          r={radius}&#10;          strokeWidth={strokeWidth * 1.5}&#10;          strokeDasharray={`${circumference} ${circumference}`}&#10;          strokeDashoffset={circumference - progress}&#10;          strokeLinecap=&quot;round&quot;&#10;          rotation=&quot;-90&quot;&#10;          originX={(size + 16) / 2}&#10;          originY={(size + 16) / 2}&#10;          filter=&quot;url(#shadow)&quot;&#10;        /&gt;&#10;        {/* 그라데이션 및 그림자 정의 */}&#10;        &lt;defs&gt;&#10;          &lt;linearGradient id=&quot;gaugeGradient&quot; x1=&quot;0&quot; y1=&quot;0&quot; x2={size + 16} y2={size + 16}&gt;&#10;            &lt;stop offset=&quot;0%&quot; stopColor=&quot;#ff7676&quot; /&gt;&#10;            &lt;stop offset=&quot;100%&quot; stopColor=&quot;#ff3b30&quot; /&gt;&#10;          &lt;/linearGradient&gt;&#10;          &lt;filter id=&quot;shadow&quot; x=&quot;-20%&quot; y=&quot;-20%&quot; width=&quot;140%&quot; height=&quot;140%&quot;&gt;&#10;            &lt;feDropShadow dx=&quot;0&quot; dy=&quot;2&quot; stdDeviation=&quot;2&quot; floodColor=&quot;#ff3b30&quot; floodOpacity=&quot;0.25&quot; /&gt;&#10;          &lt;/filter&gt;&#10;          &lt;filter id=&quot;gaugeWhiteShadow&quot; x=&quot;-30%&quot; y=&quot;-30%&quot; width=&quot;160%&quot; height=&quot;160%&quot;&gt;&#10;            &lt;feDropShadow dx=&quot;0&quot; dy=&quot;2&quot; stdDeviation=&quot;4&quot; floodColor=&quot;#fff&quot; floodOpacity=&quot;0.7&quot; /&gt;&#10;          &lt;/filter&gt;&#10;        &lt;/defs&gt;&#10;        {/* 중앙 텍스트 */}&#10;        &lt;SvgText&#10;          x=&quot;50%&quot;&#10;          y=&quot;50%&quot;&#10;          textAnchor=&quot;middle&quot;&#10;          dy=&quot;.3em&quot;&#10;          fontSize={size / 2.5}&#10;          fontWeight=&quot;bold&quot;&#10;          fill=&quot;#222&quot;&#10;        &gt;&#10;          {percentage}&#10;        &lt;/SvgText&gt;&#10;      &lt;/Svg&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}" />
              <option name="updatedContent" value="import React from &quot;react&quot;;&#10;import { View } from &quot;react-native&quot;;&#10;import Svg, { Circle, Text as SvgText } from &quot;react-native-svg&quot;;&#10;&#10;interface Props {&#10;  percentage: number;&#10;  size?: number;&#10;  strokeWidth?: number;&#10;}&#10;&#10;export default function CircularGauge({&#10;                                        percentage,&#10;                                        size = 80,&#10;                                        strokeWidth = 8,&#10;                                      }: Props) {&#10;  const radius = (size - strokeWidth) / 2;&#10;  const circumference = 2 * Math.PI * radius;&#10;  const progress = circumference * (percentage / 100);&#10;  return (&#10;    &lt;View style={{&#10;      shadowColor: '#000',&#10;      shadowOffset: { width: 0, height: 4 },&#10;      shadowOpacity: 0.18,&#10;      shadowRadius: 8,&#10;      elevation: 8,&#10;      backgroundColor: 'transparent',&#10;      borderRadius: size / 2,&#10;      alignItems: 'center',&#10;      justifyContent: 'center',&#10;    }}&gt;&#10;      &lt;Svg width={size} height={size}&gt;&#10;        {/* 흰색 배경 원 */}&#10;        &lt;Circle&#10;          cx={size / 2}&#10;          cy={size / 2}&#10;          r={radius}&#10;          fill=&quot;#fff&quot;&#10;        /&gt;&#10;        {/* 배경 원 */}&#10;        &lt;Circle&#10;          stroke=&quot;#eee&quot;&#10;          fill=&quot;none&quot;&#10;          cx={size / 2}&#10;          cy={size / 2}&#10;          r={radius}&#10;          strokeWidth={strokeWidth}&#10;        /&gt;&#10;        {/* 진행 원 (그라데이션) */}&#10;        &lt;Circle&#10;          stroke=&quot;url(#gaugeGradient)&quot;&#10;          fill=&quot;none&quot;&#10;          cx={size / 2}&#10;          cy={size / 2}&#10;          r={radius}&#10;          strokeWidth={strokeWidth * 1.5} // 더 굵게&#10;          strokeDasharray={`${circumference} ${circumference}`}&#10;          strokeDashoffset={circumference - progress}&#10;          strokeLinecap=&quot;round&quot;&#10;          rotation=&quot;-90&quot;&#10;          originX={size / 2}&#10;          originY={size / 2}&#10;        /&gt;&#10;        {/* 그라데이션 정의 */}&#10;        &lt;defs&gt;&#10;          &lt;linearGradient id=&quot;gaugeGradient&quot; x1=&quot;0&quot; y1=&quot;0&quot; x2={size} y2={size}&gt;&#10;            &lt;stop offset=&quot;0%&quot; stopColor=&quot;#ff7676&quot; /&gt;&#10;            &lt;stop offset=&quot;100%&quot; stopColor=&quot;#ff3b30&quot; /&gt;&#10;          &lt;/linearGradient&gt;&#10;        &lt;/defs&gt;&#10;        {/* 중앙 텍스트 */}&#10;        &lt;SvgText&#10;          x=&quot;50%&quot;&#10;          y=&quot;50%&quot;&#10;          textAnchor=&quot;middle&quot;&#10;          dy=&quot;.3em&quot;&#10;          fontSize={size / 2.5}&#10;          fontWeight=&quot;bold&quot;&#10;          fill=&quot;#222&quot;&#10;        &gt;&#10;          {percentage}&#10;        &lt;/SvgText&gt;&#10;      &lt;/Svg&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>