<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/_layout.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/_layout.tsx" />
              <option name="originalContent" value="import React, { useEffect, useState } from &quot;react&quot;;&#10;import { Stack, useRouter, useSegments } from &quot;expo-router&quot;;&#10;import { View, ActivityIndicator } from &quot;react-native&quot;;&#10;import AsyncStorage from &quot;@react-native-async-storage/async-storage&quot;;&#10;import { Colors } from &quot;@/constants/Colors&quot;;&#10;import { DevModeProvider } from &quot;@/contexts/DevModeContext&quot;;&#10;import { FamilyDataProvider } from '@/contexts/FamilyDataContext';&#10;&#10;const ONBOARDING_COMPLETED_KEY = &quot;onboarding_completed&quot;;&#10;&#10;function RootLayoutNav() {&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [showOnboarding, setShowOnboarding] = useState(false);&#10;  const segments = useSegments();&#10;  const router = useRouter();&#10;&#10;  const checkOnboardingStatus = async () =&gt; {&#10;    try {&#10;      const onboardingCompleted = await AsyncStorage.getItem(ONBOARDING_COMPLETED_KEY);&#10;      const shouldShowOnboarding = onboardingCompleted !== &quot;true&quot;;&#10;      setShowOnboarding(shouldShowOnboarding);&#10;&#10;      // 온보딩 상태에 따라 네비게이션&#10;      if (shouldShowOnboarding &amp;&amp; segments[0] !== &quot;onboarding&quot;) {&#10;        router.replace(&quot;/onboarding&quot;);&#10;      } else if (!shouldShowOnboarding &amp;&amp; segments[0] === &quot;onboarding&quot;) {&#10;        router.replace(&quot;/&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error checking onboarding status:&quot;, error);&#10;      setShowOnboarding(true);&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    checkOnboardingStatus();&#10;  }, []);&#10;&#10;  // AsyncStorage 변경을 감지하기 위한 interval&#10;  useEffect(() =&gt; {&#10;    const interval = setInterval(checkOnboardingStatus, 1000);&#10;    return () =&gt; clearInterval(interval);&#10;  }, []);&#10;&#10;  if (isLoading) {&#10;    return (&#10;      &lt;View&#10;        style={{&#10;          flex: 1,&#10;          justifyContent: &quot;center&quot;,&#10;          alignItems: &quot;center&quot;,&#10;          backgroundColor: Colors.background,&#10;        }}&#10;      &gt;&#10;        &lt;ActivityIndicator size=&quot;large&quot; color={Colors.primary} /&gt;&#10;      &lt;/View&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;Stack screenOptions={{&#10;      headerShown: false,&#10;      animation: &quot;none&quot;,&#10;      presentation: &quot;card&quot;,&#10;      animationDuration: 0,&#10;      gestureEnabled: false&#10;    }}&gt;&#10;      &lt;Stack.Screen name=&quot;onboarding&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;index&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;chat&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;interaction&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;myinfo&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;family/[id]&quot; /&gt;&#10;    &lt;/Stack&gt;&#10;  );&#10;}&#10;&#10;export default function RootLayout() {&#10;  return (&#10;    &lt;DevModeProvider&gt;&#10;      &lt;FamilyDataProvider&gt;&#10;        &lt;RootLayoutNav /&gt;&#10;      &lt;/FamilyDataProvider&gt;&#10;    &lt;/DevModeProvider&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import React, { useEffect, useState } from &quot;react&quot;;&#10;import { Stack, useRouter, useSegments } from &quot;expo-router&quot;;&#10;import { View, ActivityIndicator } from &quot;react-native&quot;;&#10;import AsyncStorage from &quot;@react-native-async-storage/async-storage&quot;;&#10;import { Colors } from &quot;@/constants/Colors&quot;;&#10;import { DevModeProvider } from &quot;@/contexts/DevModeContext&quot;;&#10;import { FamilyDataProvider } from '@/contexts/FamilyDataContext';&#10;&#10;const ONBOARDING_COMPLETED_KEY = &quot;onboarding_completed&quot;;&#10;&#10;function RootLayoutNav() {&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [showOnboarding, setShowOnboarding] = useState(false);&#10;  const segments = useSegments();&#10;  const router = useRouter();&#10;&#10;  const checkOnboardingStatus = async () =&gt; {&#10;    try {&#10;      const onboardingCompleted = await AsyncStorage.getItem(ONBOARDING_COMPLETED_KEY);&#10;      const shouldShowOnboarding = onboardingCompleted !== &quot;true&quot;;&#10;      setShowOnboarding(shouldShowOnboarding);&#10;&#10;      // 온보딩 상태에 따라 네비게이션&#10;      if (shouldShowOnboarding &amp;&amp; segments[0] !== &quot;onboarding&quot;) {&#10;        router.replace(&quot;/onboarding&quot;);&#10;      } else if (!shouldShowOnboarding &amp;&amp; segments[0] === &quot;onboarding&quot;) {&#10;        router.replace(&quot;/&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error checking onboarding status:&quot;, error);&#10;      setShowOnboarding(true);&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    checkOnboardingStatus();&#10;  }, []);&#10;&#10;  if (isLoading) {&#10;    return (&#10;      &lt;View&#10;        style={{&#10;          flex: 1,&#10;          justifyContent: &quot;center&quot;,&#10;          alignItems: &quot;center&quot;,&#10;          backgroundColor: Colors.background,&#10;        }}&#10;      &gt;&#10;        &lt;ActivityIndicator size=&quot;large&quot; color={Colors.primary} /&gt;&#10;      &lt;/View&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;Stack screenOptions={{&#10;      headerShown: false,&#10;      animation: &quot;none&quot;,&#10;      presentation: &quot;card&quot;,&#10;      animationDuration: 0,&#10;      gestureEnabled: false&#10;    }}&gt;&#10;      &lt;Stack.Screen name=&quot;onboarding&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;index&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;chat&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;interaction&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;myinfo&quot; /&gt;&#10;      &lt;Stack.Screen name=&quot;family/[id]&quot; /&gt;&#10;    &lt;/Stack&gt;&#10;  );&#10;}&#10;&#10;export default function RootLayout() {&#10;  return (&#10;    &lt;DevModeProvider&gt;&#10;      &lt;FamilyDataProvider&gt;&#10;        &lt;RootLayoutNav /&gt;&#10;      &lt;/FamilyDataProvider&gt;&#10;    &lt;/DevModeProvider&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/login.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/login.tsx" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, Text, TextInput, TouchableOpacity, StyleSheet, Image } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;export default function LoginScreen() {&#10;  const [email, setEmail] = useState('');&#10;  const [password, setPassword] = useState('');&#10;  const [error, setError] = useState('');&#10;  const router = useRouter();&#10;&#10;  const handleLogin = () =&gt; {&#10;    // 실제 로그인 로직은 서버 연동 필요&#10;    if (!email || !password) {&#10;      setError('이메일과 비밀번호를 입력하세요.');&#10;      return;&#10;    }&#10;    setError('');&#10;    // 로그인 성공 시 홈으로 이동 (예시)&#10;    router.replace('/');&#10;  };&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* 상단 로고/타이틀 */}&#10;      &lt;Image source={require('@/../assets/images/icon.png')} style={styles.logo} /&gt;&#10;      &lt;Text style={styles.title}&gt;로그인&lt;/Text&gt;&#10;      &lt;Text style={styles.subtitle}&gt;PillLink에 오신 것을 환영합니다!&lt;/Text&gt;&#10;      {/* 입력 폼 */}&#10;      &lt;View style={styles.inputSection}&gt;&#10;        &lt;TextInput&#10;          style={styles.input}&#10;          placeholder=&quot;이메일&quot;&#10;          placeholderTextColor={Colors.mediumGray}&#10;          value={email}&#10;          onChangeText={setEmail}&#10;          keyboardType=&quot;email-address&quot;&#10;          autoCapitalize=&quot;none&quot;&#10;        /&gt;&#10;        &lt;TextInput&#10;          style={styles.input}&#10;          placeholder=&quot;비밀번호&quot;&#10;          placeholderTextColor={Colors.mediumGray}&#10;          value={password}&#10;          onChangeText={setPassword}&#10;          secureTextEntry&#10;        /&gt;&#10;        {error ? &lt;Text style={styles.error}&gt;{error}&lt;/Text&gt; : null}&#10;        &lt;TouchableOpacity style={styles.loginButton} onPress={handleLogin}&gt;&#10;          &lt;Text style={styles.loginButtonText}&gt;로그인&lt;/Text&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;      &lt;/View&gt;&#10;      {/* 하단 링크 */}&#10;      &lt;View style={styles.bottomLinks}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.push('/signup')}&gt;&#10;          &lt;Text style={styles.linkText}&gt;회원가입&lt;/Text&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.linkDivider}&gt;|&lt;/Text&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.push('/find-password')}&gt;&#10;          &lt;Text style={styles.linkText}&gt;비밀번호 찾기&lt;/Text&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;      &lt;/View&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingHorizontal: 24,&#10;  },&#10;  logo: {&#10;    width: 64,&#10;    height: 64,&#10;    marginBottom: 16,&#10;    resizeMode: 'contain',&#10;  },&#10;  title: {&#10;    fontSize: 28,&#10;    fontWeight: 'bold',&#10;    color: Colors.text,&#10;    marginBottom: 8,&#10;  },&#10;  subtitle: {&#10;    fontSize: 16,&#10;    color: Colors.mediumGray,&#10;    marginBottom: 32,&#10;  },&#10;  inputSection: {&#10;    width: '100%',&#10;    marginBottom: 24,&#10;  },&#10;  input: {&#10;    width: '100%',&#10;    borderWidth: 1,&#10;    borderColor: '#E5E7EB',&#10;    borderRadius: 10,&#10;    padding: 14,&#10;    fontSize: 16,&#10;    marginBottom: 12,&#10;    backgroundColor: '#F9FAFB',&#10;    color: Colors.text,&#10;  },&#10;  loginButton: {&#10;    backgroundColor: Colors.primary,&#10;    borderRadius: 10,&#10;    paddingVertical: 14,&#10;    alignItems: 'center',&#10;    marginTop: 8,&#10;  },&#10;  loginButtonText: {&#10;    color: '#fff',&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;  },&#10;  error: {&#10;    color: '#EF4444',&#10;    marginBottom: 8,&#10;    textAlign: 'center',&#10;  },&#10;  bottomLinks: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    marginTop: 12,&#10;  },&#10;  linkText: {&#10;    color: Colors.primary,&#10;    fontSize: 15,&#10;    fontWeight: '500',&#10;    paddingHorizontal: 8,&#10;  },&#10;  linkDivider: {&#10;    color: '#B0B0B0',&#10;    fontSize: 15,&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/search-result.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/search-result.tsx" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, TextInput, StyleSheet, Text, TouchableOpacity, ScrollView, KeyboardAvoidingView, Platform } from 'react-native';&#10;import { MaterialCommunityIcons } from '@expo/vector-icons';&#10;&#10;const MOCK_RESULTS = [&#10;  '아토르바스틴', '암로디핀', '로사르탄',&#10;  '아스피린', '탐스로신', '멜록시캄', '세티리진',&#10;  '타이레놀', '메트포르민',&#10;];&#10;&#10;export default function SearchResultScreen() {&#10;  const [search, setSearch] = useState('');&#10;&#10;  // 실제 검색 결과는 search 값에 따라 필터링해서 보여주면 됩니다.&#10;  const filtered = search&#10;    ? MOCK_RESULTS.filter(item =&gt; item.includes(search))&#10;    : MOCK_RESULTS;&#10;&#10;  return (&#10;    &lt;KeyboardAvoidingView&#10;      style={{ flex: 1, backgroundColor: '#fff' }}&#10;      behavior={Platform.OS === 'ios' ? 'padding' : undefined}&#10;    &gt;&#10;      {/* 상단 바 대체 */}&#10;      &lt;View style={styles.statusBar} /&gt;&#10;      {/* 검색창 */}&#10;      &lt;View style={styles.searchBarContainer}&gt;&#10;        &lt;TextInput&#10;          style={styles.searchBar}&#10;          placeholder=&quot;복용하시는 약알을 검색해보세요&quot;&#10;          placeholderTextColor=&quot;#B0B0B0&quot;&#10;          value={search}&#10;          onChangeText={setSearch}&#10;          returnKeyType=&quot;search&quot;&#10;          autoFocus&#10;        /&gt;&#10;        &lt;MaterialCommunityIcons name=&quot;magnify&quot; size={28} color=&quot;#888&quot; style={styles.searchIcon} /&gt;&#10;      &lt;/View&gt;&#10;      {/* 검색 결과 */}&#10;      &lt;ScrollView contentContainerStyle={styles.suggestionContainer} keyboardShouldPersistTaps=&quot;handled&quot;&gt;&#10;        &lt;View style={styles.suggestionWrap}&gt;&#10;          {filtered.length === 0 ? (&#10;            &lt;Text style={styles.noResultText}&gt;검색 결과가 없습니다.&lt;/Text&gt;&#10;          ) : (&#10;            filtered.map((item) =&gt; (&#10;              &lt;TouchableOpacity key={item} style={styles.suggestionButton}&gt;&#10;                &lt;Text style={styles.suggestionText}&gt;{item}&lt;/Text&gt;&#10;              &lt;/TouchableOpacity&gt;&#10;            ))&#10;          )}&#10;        &lt;/View&gt;&#10;      &lt;/ScrollView&gt;&#10;    &lt;/KeyboardAvoidingView&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  statusBar: {&#10;    height: 56,&#10;    backgroundColor: '#1877F2',&#10;    justifyContent: 'flex-end',&#10;  },&#10;  searchBarContainer: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    marginTop: 16,&#10;    marginHorizontal: 16,&#10;    marginBottom: 8,&#10;  },&#10;  searchBar: {&#10;    flex: 1,&#10;    height: 48,&#10;    backgroundColor: '#F7F7F7',&#10;    borderRadius: 24,&#10;    paddingHorizontal: 20,&#10;    fontSize: 16,&#10;    borderWidth: 1,&#10;    borderColor: '#D0D0D0',&#10;    color: '#222',&#10;  },&#10;  searchIcon: {&#10;    position: 'absolute',&#10;    right: 20,&#10;    top: 10,&#10;  },&#10;  suggestionContainer: {&#10;    paddingHorizontal: 16,&#10;    paddingTop: 16,&#10;    flexGrow: 1,&#10;  },&#10;  suggestionWrap: {&#10;    flexDirection: 'row',&#10;    flexWrap: 'wrap',&#10;    gap: 12,&#10;    justifyContent: 'flex-start',&#10;  },&#10;  suggestionButton: {&#10;    borderWidth: 1.5,&#10;    borderColor: '#1877F2',&#10;    borderRadius: 24,&#10;    paddingHorizontal: 18,&#10;    paddingVertical: 8,&#10;    marginRight: 8,&#10;    marginBottom: 12,&#10;    backgroundColor: '#fff',&#10;  },&#10;  suggestionText: {&#10;    color: '#1877F2',&#10;    fontSize: 16,&#10;    fontWeight: '500',&#10;  },&#10;  noResultText: {&#10;    color: '#888',&#10;    fontSize: 16,&#10;    marginTop: 32,&#10;    textAlign: 'center',&#10;    width: '100%',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/search.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/search.tsx" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, TextInput, StyleSheet, Text, TouchableOpacity, ScrollView, KeyboardAvoidingView, Platform } from 'react-native';&#10;import { MaterialCommunityIcons } from '@expo/vector-icons';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;const SUGGESTIONS = [&#10;  '아토르바스틴', '암로디핀', '로사르탄',&#10;  '아스피린', '탐스로신', '멜록시캄', '세티리진',&#10;  '타이레놀', '메트포르민',&#10;];&#10;&#10;export default function SearchScreen() {&#10;  const [search, setSearch] = useState('');&#10;&#10;  return (&#10;    &lt;KeyboardAvoidingView&#10;      style={{ flex: 1, backgroundColor: '#fff' }}&#10;      behavior={Platform.OS === 'ios' ? 'padding' : undefined}&#10;    &gt;&#10;      {/* 상단 바 대체 */}&#10;      &lt;View style={styles.statusBar} /&gt;&#10;      {/* 검색창 */}&#10;      &lt;View style={styles.searchBarContainer}&gt;&#10;        &lt;TextInput&#10;          style={styles.searchBar}&#10;          placeholder=&quot;복용하시는 약알을 검색해보세요&quot;&#10;          placeholderTextColor=&quot;#B0B0B0&quot;&#10;          value={search}&#10;          onChangeText={setSearch}&#10;          returnKeyType=&quot;search&quot;&#10;        /&gt;&#10;        &lt;MaterialCommunityIcons name=&quot;magnify&quot; size={28} color=&quot;#888&quot; style={styles.searchIcon} /&gt;&#10;      &lt;/View&gt;&#10;      {/* 추천 약물 */}&#10;      &lt;ScrollView contentContainerStyle={styles.suggestionContainer} keyboardShouldPersistTaps=&quot;handled&quot;&gt;&#10;        &lt;View style={styles.suggestionWrap}&gt;&#10;          {SUGGESTIONS.map((item) =&gt; (&#10;            &lt;TouchableOpacity key={item} style={styles.suggestionButton}&gt;&#10;              &lt;Text style={styles.suggestionText}&gt;{item}&lt;/Text&gt;&#10;            &lt;/TouchableOpacity&gt;&#10;          ))}&#10;        &lt;/View&gt;&#10;      &lt;/ScrollView&gt;&#10;    &lt;/KeyboardAvoidingView&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  statusBar: {&#10;    height: 56,&#10;    backgroundColor: '#1877F2',&#10;    justifyContent: 'flex-end',&#10;  },&#10;  searchBarContainer: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    marginTop: 16,&#10;    marginHorizontal: 16,&#10;    marginBottom: 8,&#10;  },&#10;  searchBar: {&#10;    flex: 1,&#10;    height: 48,&#10;    backgroundColor: '#F7F7F7',&#10;    borderRadius: 24,&#10;    paddingHorizontal: 20,&#10;    fontSize: 16,&#10;    borderWidth: 1,&#10;    borderColor: '#D0D0D0',&#10;    color: '#222',&#10;  },&#10;  searchIcon: {&#10;    position: 'absolute',&#10;    right: 20,&#10;    top: 10,&#10;  },&#10;  suggestionContainer: {&#10;    paddingHorizontal: 16,&#10;    paddingTop: 16,&#10;    flexGrow: 1,&#10;  },&#10;  suggestionWrap: {&#10;    flexDirection: 'row',&#10;    flexWrap: 'wrap',&#10;    gap: 12,&#10;    justifyContent: 'flex-start',&#10;  },&#10;  suggestionButton: {&#10;    borderWidth: 1.5,&#10;    borderColor: '#1877F2',&#10;    borderRadius: 24,&#10;    paddingHorizontal: 18,&#10;    paddingVertical: 8,&#10;    marginRight: 8,&#10;    marginBottom: 12,&#10;    backgroundColor: '#fff',&#10;  },&#10;  suggestionText: {&#10;    color: '#1877F2',&#10;    fontSize: 16,&#10;    fontWeight: '500',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-allergy.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-allergy.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;const ALLERGIES = [&#10;  '게', '대두', '꽃가루', '땅콩',&#10;  '계란', '석류', '벌', '꿀',&#10;  '카페인 민감', 'MSG 민감',&#10;];&#10;&#10;export default function SignupAllergy() {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;정보입력&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '95%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;가지고 계신 &lt;Text style={styles.blue}&gt;알러지&lt;/Text&gt;가 있다면{'&#10;'}선택해주세요&lt;/Text&gt;&#10;      {/* Allergy Buttons */}&#10;      &lt;View style={styles.grid}&gt;&#10;        {ALLERGIES.map((a, i) =&gt; (&#10;          &lt;TouchableOpacity key={i} style={styles.allergyBtn}&gt;&#10;            &lt;Text style={styles.allergyText}&gt;{a}&lt;/Text&gt;&#10;          &lt;/TouchableOpacity&gt;&#10;        ))}&#10;      &lt;/View&gt;&#10;      &lt;Text style={styles.subText}&gt;찾는 알러지가 없나요?&lt;/Text&gt;&#10;      {/* Next Button */}&#10;      &lt;TouchableOpacity style={styles.nextBtn}&gt;&#10;        &lt;Text style={styles.nextBtnText}&gt;다음&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '95%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 32,&#10;    alignSelf: 'flex-start',&#10;    marginLeft: 20,&#10;  },&#10;  blue: {&#10;    color: '#1976F7',&#10;  },&#10;  grid: {&#10;    flexDirection: 'row',&#10;    flexWrap: 'wrap',&#10;    justifyContent: 'center',&#10;    marginHorizontal: 10,&#10;    marginBottom: 24,&#10;  },&#10;  allergyBtn: {&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    paddingVertical: 18,&#10;    paddingHorizontal: 32,&#10;    margin: 8,&#10;    minWidth: 140,&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 4,&#10;    elevation: 2,&#10;  },&#10;  allergyText: {&#10;    fontSize: 18,&#10;    color: '#222',&#10;    fontWeight: 'bold',&#10;  },&#10;  subText: {&#10;    fontSize: 16,&#10;    color: '#888',&#10;    alignSelf: 'center',&#10;    marginBottom: 18,&#10;    marginTop: 8,&#10;    textDecorationLine: 'underline',&#10;  },&#10;  nextBtn: {&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 18,&#10;    paddingVertical: 22,&#10;    marginHorizontal: 20,&#10;    marginTop: 8,&#10;    alignItems: 'center',&#10;  },&#10;  nextBtnText: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#fff',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-auth.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-auth.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupAuth() {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;본인인증&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '50%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;본인인증 방법을 선택해주세요&lt;/Text&gt;&#10;      {/* 인증 버튼 */}&#10;      &lt;TouchableOpacity style={styles.authBtn}&gt;&#10;        &lt;Text style={styles.authBtnSub}&gt;본인 명의로 가입된&lt;/Text&gt;&#10;        &lt;Text style={styles.authBtnMain}&gt;휴대폰 인증&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;      &lt;TouchableOpacity style={styles.authBtn}&gt;&#10;        &lt;Text style={styles.authBtnMain}&gt;아이핀 인증&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    paddingHorizontal: 0,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '50%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 48,&#10;    alignSelf: 'center',&#10;  },&#10;  authBtn: {&#10;    backgroundColor: '#F5F6F8',&#10;    borderRadius: 18,&#10;    paddingVertical: 28,&#10;    marginHorizontal: 20,&#10;    marginBottom: 28,&#10;    justifyContent: 'center',&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 4,&#10;    elevation: 2,&#10;  },&#10;  authBtnSub: {&#10;    fontSize: 15,&#10;    color: '#6B7280',&#10;    marginBottom: 2,&#10;  },&#10;  authBtnMain: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#222',&#10;  },&#10;});&#10;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupAuth() {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;본인인증&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '50%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;본인인증 방법을 선택해주세요&lt;/Text&gt;&#10;      {/* 인증 버튼 */}&#10;      &lt;TouchableOpacity style={styles.authBtn} onPress={() =&gt; router.push('/signup-info')}&gt;&#10;        &lt;Text style={styles.authBtnSub}&gt;본인 명의로 가입된&lt;/Text&gt;&#10;        &lt;Text style={styles.authBtnMain}&gt;휴대폰 인증&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;      &lt;TouchableOpacity style={styles.authBtn} onPress={() =&gt; router.push('/signup-info')}&gt;&#10;        &lt;Text style={styles.authBtnMain}&gt;아이핀 인증&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    paddingHorizontal: 0,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '50%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 48,&#10;    alignSelf: 'center',&#10;  },&#10;  authBtn: {&#10;    backgroundColor: '#F5F6F8',&#10;    borderRadius: 18,&#10;    paddingVertical: 28,&#10;    marginHorizontal: 20,&#10;    marginBottom: 28,&#10;    justifyContent: 'center',&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 4,&#10;    elevation: 2,&#10;  },&#10;  authBtnSub: {&#10;    fontSize: 15,&#10;    color: '#6B7280',&#10;    marginBottom: 2,&#10;  },&#10;  authBtnMain: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#222',&#10;  },&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-complete.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-complete.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupComplete() {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;가입완료&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '100%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Complete Icon &amp; Text */}&#10;      &lt;View style={styles.centerContent}&gt;&#10;        &lt;View style={styles.checkCircle}&gt;&#10;          &lt;Ionicons name=&quot;checkmark&quot; size={80} color=&quot;#fff&quot; /&gt;&#10;        &lt;/View&gt;&#10;        &lt;Text style={styles.nameText}&gt;유은정님&lt;/Text&gt;&#10;        &lt;Text style={styles.completeText}&gt;가입이 완료되었습니다&lt;/Text&gt;&#10;      &lt;/View&gt;&#10;      {/* 확인 버튼 */}&#10;      &lt;TouchableOpacity style={styles.nextBtn}&gt;&#10;        &lt;Text style={styles.nextBtnText}&gt;확인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '100%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  centerContent: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;  },&#10;  checkCircle: {&#10;    width: 120,&#10;    height: 120,&#10;    borderRadius: 60,&#10;    backgroundColor: '#1976F7',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    marginBottom: 32,&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.10,&#10;    shadowRadius: 8,&#10;    elevation: 4,&#10;  },&#10;  nameText: {&#10;    fontSize: 28,&#10;    color: '#1976F7',&#10;    fontWeight: 'bold',&#10;    marginBottom: 8,&#10;  },&#10;  completeText: {&#10;    fontSize: 22,&#10;    color: '#111',&#10;    fontWeight: '500',&#10;    marginBottom: 32,&#10;  },&#10;  nextBtn: {&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 18,&#10;    paddingVertical: 22,&#10;    marginHorizontal: 20,&#10;    marginBottom: 40,&#10;    alignItems: 'center',&#10;  },&#10;  nextBtnText: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#fff',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-disease.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-disease.tsx" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;const DISEASES = [&#10;  '당뇨병', '고혈압', '무릎관절증', '만성요통',&#10;  '만성위염', '시력감퇴', '만성심질환', '알레르기',&#10;  '전립선 비대증', '치매',&#10;];&#10;&#10;export default function SignupDisease() {&#10;  const router = useRouter();&#10;  const [selected, setSelected] = useState([]);&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;정보입력&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '85%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;가지고 계신 &lt;Text style={styles.blue}&gt;질환&lt;/Text&gt;이 있다면{'&#10;'}선택해주세요&lt;/Text&gt;&#10;      {/* Disease Buttons */}&#10;      &lt;View style={styles.grid}&gt;&#10;        {DISEASES.map((d, i) =&gt; (&#10;          &lt;TouchableOpacity key={i} style={styles.diseaseBtn}&gt;&#10;            &lt;Text style={styles.diseaseText}&gt;{d}&lt;/Text&gt;&#10;          &lt;/TouchableOpacity&gt;&#10;        ))}&#10;      &lt;/View&gt;&#10;      &lt;Text style={styles.subText}&gt;찾는 질환이 없나요?&lt;/Text&gt;&#10;      {/* Next Button */}&#10;      &lt;TouchableOpacity style={styles.nextBtn}&gt;&#10;        &lt;Text style={styles.nextBtnText}&gt;다음&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '85%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 32,&#10;    alignSelf: 'flex-start',&#10;    marginLeft: 20,&#10;  },&#10;  blue: {&#10;    color: '#1976F7',&#10;  },&#10;  grid: {&#10;    flexDirection: 'row',&#10;    flexWrap: 'wrap',&#10;    justifyContent: 'center',&#10;    marginHorizontal: 10,&#10;    marginBottom: 24,&#10;  },&#10;  diseaseBtn: {&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    paddingVertical: 18,&#10;    paddingHorizontal: 32,&#10;    margin: 8,&#10;    minWidth: 140,&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 4,&#10;    elevation: 2,&#10;  },&#10;  diseaseText: {&#10;    fontSize: 18,&#10;    color: '#222',&#10;    fontWeight: 'bold',&#10;  },&#10;  subText: {&#10;    fontSize: 16,&#10;    color: '#888',&#10;    alignSelf: 'center',&#10;    marginBottom: 18,&#10;    marginTop: 8,&#10;    textDecorationLine: 'underline',&#10;  },&#10;  nextBtn: {&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 18,&#10;    paddingVertical: 22,&#10;    marginHorizontal: 20,&#10;    marginTop: 8,&#10;    alignItems: 'center',&#10;  },&#10;  nextBtnText: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#fff',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-info.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-info.tsx" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, TextInput } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupInfo() {&#10;  const router = useRouter();&#10;  const [name, setName] = useState('');&#10;  const [rrn1, setRrn1] = useState('');&#10;  const [rrn2, setRrn2] = useState('');&#10;  const [phone, setPhone] = useState('');&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;정보입력&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '70%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Input Fields */}&#10;      &lt;View style={{ marginTop: 32 }}&gt;&#10;        &lt;Text style={styles.labelActive}&gt;이름&lt;/Text&gt;&#10;        &lt;TextInput&#10;          style={styles.input}&#10;          placeholder=&quot;이름을 입력하세요&quot;&#10;          placeholderTextColor=&quot;#C4C4C4&quot;&#10;          value={name}&#10;          onChangeText={setName}&#10;        /&gt;&#10;        &lt;Text style={styles.labelActive}&gt;주민등록번호&lt;/Text&gt;&#10;        &lt;View style={styles.rrnRow}&gt;&#10;          &lt;TextInput&#10;            style={[styles.input, { flex: 1 }]}&#10;            placeholder=&quot;&quot;&#10;            value={rrn1}&#10;            onChangeText={setRrn1}&#10;            keyboardType=&quot;number-pad&quot;&#10;            maxLength={6}&#10;          /&gt;&#10;          &lt;Text style={styles.rrnDash}&gt;-&lt;/Text&gt;&#10;          &lt;TextInput&#10;            style={[styles.input, { flex: 1 }]}&#10;            placeholder=&quot;&quot;&#10;            value={rrn2}&#10;            onChangeText={setRrn2}&#10;            keyboardType=&quot;number-pad&quot;&#10;            maxLength={7}&#10;            secureTextEntry&#10;          /&gt;&#10;        &lt;/View&gt;&#10;        &lt;Text style={styles.labelActive}&gt;휴대전화번호&lt;/Text&gt;&#10;        &lt;TextInput&#10;          style={styles.input}&#10;          placeholder=&quot;ex) 01012345678&quot;&#10;          placeholderTextColor=&quot;#C4C4C4&quot;&#10;          value={phone}&#10;          onChangeText={setPhone}&#10;          keyboardType=&quot;phone-pad&quot;&#10;        /&gt;&#10;      &lt;/View&gt;&#10;      {/* Next Button */}&#10;      &lt;TouchableOpacity style={styles.nextBtn} disabled&gt;&#10;        &lt;Text style={styles.nextBtnText}&gt;다음&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    paddingHorizontal: 0,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '70%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  labelActive: {&#10;    fontSize: 18,&#10;    color: '#1976F7',&#10;    fontWeight: 'bold',&#10;    marginTop: 24,&#10;    marginBottom: 4,&#10;  },&#10;  input: {&#10;    borderBottomWidth: 1,&#10;    borderBottomColor: '#C4C4C4',&#10;    fontSize: 18,&#10;    paddingVertical: 10,&#10;    marginBottom: 8,&#10;    color: '#222',&#10;  },&#10;  rrnRow: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    marginBottom: 8,&#10;  },&#10;  rrnDash: {&#10;    fontSize: 22,&#10;    color: '#888',&#10;    marginHorizontal: 8,&#10;  },&#10;  nextBtn: {&#10;    backgroundColor: '#ddd',&#10;    borderRadius: 18,&#10;    paddingVertical: 22,&#10;    marginHorizontal: 20,&#10;    marginTop: 40,&#10;    alignItems: 'center',&#10;  },&#10;  nextBtnText: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#fff',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-service.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-service.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupServiceSelect() {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;회원가입&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '25%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;시작할 서비스를 선택해주세요&lt;/Text&gt;&#10;      {/* Buttons */}&#10;      &lt;TouchableOpacity style={styles.roleBtn} onPress={() =&gt; router.push('/signup-terms')}&gt;&#10;        &lt;Text style={styles.roleBtnText}&gt;보호자&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;      &lt;TouchableOpacity style={styles.roleBtn} onPress={() =&gt; router.push('/signup-terms')}&gt;&#10;        &lt;Text style={styles.roleBtnText}&gt;보호 대상자&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    paddingHorizontal: 0,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '25%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 48,&#10;    alignSelf: 'center',&#10;  },&#10;  roleBtn: {&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 18,&#10;    paddingVertical: 28,&#10;    marginHorizontal: 20,&#10;    marginBottom: 28,&#10;    justifyContent: 'center',&#10;    alignItems: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 4,&#10;    elevation: 2,&#10;  },&#10;  roleBtnText: {&#10;    fontSize: 22,&#10;    fontWeight: 'bold',&#10;    color: '#fff',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-social.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-social.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, SafeAreaView } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import PrimaryButton from '../components/PrimaryButton';&#10;&#10;export default function SignupSocialScreen() {&#10;  const router = useRouter();&#10;  const [selected, setSelected] = React.useState(null); // selected 상태 추가&#10;&#10;  return (&#10;    &lt;SafeAreaView style={[styles.container, { paddingTop: 36, paddingBottom: 24, paddingHorizontal: 24 }]}&gt;&#10;      &lt;Text style={styles.title}&gt;회원가입&lt;/Text&gt;&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '20%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      &lt;Text style={styles.subtitle}&gt;로그인할 방식을 선택해주세요&lt;/Text&gt;&#10;      &lt;View style={styles.buttonGroup}&gt;&#10;        &lt;PrimaryButton&#10;          title=&quot;카카오톡으로 로그인&quot;&#10;          onPress={() =&gt; {&#10;            setSelected('kakao');&#10;            router.push('/signup');&#10;          }}&#10;          backgroundColor=&quot;#FEE500&quot;&#10;          textStyle={{ color: '#191600', fontWeight: '700', fontSize: 18 }}&#10;          style={styles.kakaoBtn}&#10;        /&gt;&#10;        &lt;PrimaryButton&#10;          title=&quot;Google로 로그인&quot;&#10;          onPress={() =&gt; {&#10;            setSelected('google');&#10;            router.push('/signup');&#10;          }}&#10;          backgroundColor=&quot;#fff&quot;&#10;          textStyle={{ color: '#191600', fontWeight: '700', fontSize: 18 }}&#10;          style={styles.googleBtn}&#10;        /&gt;&#10;      &lt;/View&gt;&#10;      {/* &lt;PrimaryButton&#10;        title=&quot;다음&quot;&#10;        onPress={() =&gt; router.push('/signup')}&#10;        disabled={!selected}&#10;        style={[styles.nextBtn, { marginTop: 28 }]} // 버튼 위 간격 넉넉하게&#10;      /&gt; */}&#10;    &lt;/SafeAreaView&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#F8FAFC',&#10;    paddingHorizontal: 24,&#10;    paddingTop: 36,&#10;  },&#10;  title: {&#10;    fontSize: 24,&#10;    fontWeight: 'bold',&#10;    alignSelf: 'center',&#10;    marginBottom: 16, // 간격 확대&#10;    color: '#222',&#10;    letterSpacing: 0.2,&#10;  },&#10;  progressBarBg: {&#10;    height: 8,&#10;    backgroundColor: '#E5E8EC',&#10;    borderRadius: 4,&#10;    marginVertical: 20, // 소폭 증가&#10;    overflow: 'hidden',&#10;  },&#10;  progressBar: {&#10;    height: 8,&#10;    backgroundColor: '#1476FF',&#10;    borderRadius: 4,&#10;  },&#10;  subtitle: {&#10;    fontSize: 19,&#10;    fontWeight: '600',&#10;    marginVertical: 24, // 간격 축소&#10;    color: '#222',&#10;    textAlign: 'center',&#10;    letterSpacing: 0.1,&#10;  },&#10;  buttonGroup: {&#10;    gap: 16, // gap 소폭 축소&#10;    marginTop: 12, // marginTop 소폭 증가&#10;    marginBottom: 24, // marginBottom 소폭 축소&#10;  },&#10;  kakaoBtn: {&#10;    backgroundColor: '#FEE500',&#10;    marginBottom: 10,&#10;    borderWidth: 0,&#10;  },&#10;  googleBtn: {&#10;    backgroundColor: '#fff',&#10;    borderWidth: 1.5,&#10;    borderColor: '#E5E8EC',&#10;    marginBottom: 10,&#10;  },&#10;  nextBtn: {&#10;    marginTop: 18,&#10;  },&#10;});&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, SafeAreaView, TouchableOpacity } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import PrimaryButton from '../components/PrimaryButton';&#10;import { MaterialIcons } from '@expo/vector-icons';&#10;&#10;export default function SignupSocialScreen() {&#10;  const router = useRouter();&#10;  const [selected, setSelected] = React.useState(null); // selected 상태 추가&#10;&#10;  return (&#10;    &lt;SafeAreaView style={[styles.container, { paddingTop: 36, paddingBottom: 24, paddingHorizontal: 24 }]}&gt;&#10;      &lt;TouchableOpacity onPress={() =&gt; router.back()} style={{ position: 'absolute', left: 16, top: 36, zIndex: 10 }}&gt;&#10;        &lt;MaterialIcons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;      &lt;Text style={styles.title}&gt;회원가입&lt;/Text&gt;&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '20%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      &lt;Text style={styles.subtitle}&gt;로그인할 방식을 선택해주세요&lt;/Text&gt;&#10;      &lt;View style={styles.buttonGroup}&gt;&#10;        &lt;PrimaryButton&#10;          title=&quot;카카오톡으로 로그인&quot;&#10;          onPress={() =&gt; {&#10;            setSelected('kakao');&#10;            router.push('/signup');&#10;          }}&#10;          backgroundColor=&quot;#FEE500&quot;&#10;          textStyle={{ color: '#191600', fontWeight: '700', fontSize: 18 }}&#10;          style={styles.kakaoBtn}&#10;        /&gt;&#10;        &lt;PrimaryButton&#10;          title=&quot;Google로 로그인&quot;&#10;          onPress={() =&gt; {&#10;            setSelected('google');&#10;            router.push('/signup');&#10;          }}&#10;          backgroundColor=&quot;#fff&quot;&#10;          textStyle={{ color: '#191600', fontWeight: '700', fontSize: 18 }}&#10;          style={styles.googleBtn}&#10;        /&gt;&#10;      &lt;/View&gt;&#10;      {/* &lt;PrimaryButton&#10;        title=&quot;다음&quot;&#10;        onPress={() =&gt; router.push('/signup')}&#10;        disabled={!selected}&#10;        style={[styles.nextBtn, { marginTop: 28 }]} // 버튼 위 간격 넉넉하게&#10;      /&gt; */}&#10;    &lt;/SafeAreaView&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#F8FAFC',&#10;    paddingHorizontal: 24,&#10;    paddingTop: 36,&#10;  },&#10;  title: {&#10;    fontSize: 24,&#10;    fontWeight: 'bold',&#10;    alignSelf: 'center',&#10;    marginBottom: 16, // 간격 확대&#10;    color: '#222',&#10;    letterSpacing: 0.2,&#10;  },&#10;  progressBarBg: {&#10;    height: 8,&#10;    backgroundColor: '#E5E8EC',&#10;    borderRadius: 4,&#10;    marginVertical: 20, // 소폭 증가&#10;    overflow: 'hidden',&#10;  },&#10;  progressBar: {&#10;    height: 8,&#10;    backgroundColor: '#1476FF',&#10;    borderRadius: 4,&#10;  },&#10;  subtitle: {&#10;    fontSize: 19,&#10;    fontWeight: '600',&#10;    marginVertical: 24, // 간격 축소&#10;    color: '#222',&#10;    textAlign: 'center',&#10;    letterSpacing: 0.1,&#10;  },&#10;  buttonGroup: {&#10;    gap: 16, // gap 소폭 축소&#10;    marginTop: 12, // marginTop 소폭 증가&#10;    marginBottom: 24, // marginBottom 소폭 축소&#10;  },&#10;  kakaoBtn: {&#10;    backgroundColor: '#FEE500',&#10;    marginBottom: 10,&#10;    borderWidth: 0,&#10;  },&#10;  googleBtn: {&#10;    backgroundColor: '#fff',&#10;    borderWidth: 1.5,&#10;    borderColor: '#E5E8EC',&#10;    marginBottom: 10,&#10;  },&#10;  nextBtn: {&#10;    marginTop: 18,&#10;  },&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup-terms.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup-terms.tsx" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupTerms() {&#10;  const router = useRouter();&#10;  const [allAgreed, setAllAgreed] = useState(false);&#10;&#10;  const terms = [&#10;    '개인정보 처리 목적',&#10;    '개인정보처리및보유기간',&#10;    '이용기간',&#10;    '처리하는 개인정보의 항목',&#10;  ];&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;약관동의&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={[styles.progressBar, { width: '35%' }]} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Card */}&#10;      &lt;View style={styles.card}&gt;&#10;        &lt;View style={styles.termRow}&gt;&#10;          &lt;Ionicons name=&quot;checkmark&quot; size={22} color=&quot;#1976F7&quot; style={{ marginRight: 8 }} /&gt;&#10;          &lt;Text style={styles.allAgreeText}&gt;&lt;Text style={{ fontWeight: 'bold' }}&gt;전체 동의합니다.&lt;/Text&gt;&lt;/Text&gt;&#10;        &lt;/View&gt;&#10;        {terms.map((t, i) =&gt; (&#10;          &lt;View style={styles.termRow} key={i}&gt;&#10;            &lt;Ionicons name=&quot;checkmark&quot; size={20} color=&quot;#1976F7&quot; style={{ marginRight: 8 }} /&gt;&#10;            &lt;Text style={styles.termText}&gt;(필수) {t}&lt;/Text&gt;&#10;          &lt;/View&gt;&#10;        ))}&#10;      &lt;/View&gt;&#10;      {/* Next Button */}&#10;      &lt;TouchableOpacity style={styles.nextBtn} disabled&gt;&#10;        &lt;Text style={styles.nextBtnText}&gt;다음&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '35%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  card: {&#10;    backgroundColor: '#fff',&#10;    borderRadius: 24,&#10;    marginHorizontal: 20,&#10;    padding: 28,&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 8,&#10;    elevation: 3,&#10;    marginBottom: 32,&#10;  },&#10;  termRow: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    marginBottom: 14,&#10;  },&#10;  allAgreeText: {&#10;    fontSize: 18,&#10;    color: '#222',&#10;  },&#10;  termText: {&#10;    fontSize: 16,&#10;    color: '#222',&#10;  },&#10;  nextBtn: {&#10;    backgroundColor: '#ddd',&#10;    borderRadius: 18,&#10;    paddingVertical: 22,&#10;    marginHorizontal: 20,&#10;    marginTop: 24,&#10;    alignItems: 'center',&#10;  },&#10;  nextBtnText: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#fff',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/signup.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/signup.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupScreen() {&#10;  const router = useRouter();&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;회원가입&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={styles.progressBar} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;로그인할 방식을 선택해주세요&lt;/Text&gt;&#10;      {/* Kakao Login Button */}&#10;      &lt;TouchableOpacity style={styles.kakaoBtn}&gt;&#10;        &lt;Image source={require('../assets/images/kakao.png')} style={styles.kakaoIcon} /&gt;&#10;        &lt;Text style={styles.kakaoText}&gt;카카오톡으로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;      {/* Google Login Button */}&#10;      &lt;TouchableOpacity style={styles.googleBtn}&gt;&#10;        &lt;Image source={require('../assets/images/google.png')} style={styles.googleIcon} /&gt;&#10;        &lt;Text style={styles.googleText}&gt;Google로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    paddingHorizontal: 0,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '25%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 48,&#10;    alignSelf: 'center',&#10;  },&#10;  kakaoBtn: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#FEE500',&#10;    borderRadius: 18,&#10;    paddingVertical: 24,&#10;    paddingHorizontal: 24,&#10;    marginHorizontal: 20,&#10;    marginBottom: 24,&#10;    justifyContent: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.04,&#10;    shadowRadius: 2,&#10;    elevation: 2,&#10;  },&#10;  kakaoIcon: {&#10;    width: 28,&#10;    height: 28,&#10;    marginRight: 12,&#10;    resizeMode: 'contain',&#10;  },&#10;  kakaoText: {&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;    color: '#3C1E1E',&#10;  },&#10;  googleBtn: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#fff',&#10;    borderRadius: 18,&#10;    paddingVertical: 24,&#10;    paddingHorizontal: 24,&#10;    marginHorizontal: 20,&#10;    borderWidth: 1.5,&#10;    borderColor: '#D1D5DB',&#10;    justifyContent: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.04,&#10;    shadowRadius: 2,&#10;    elevation: 2,&#10;  },&#10;  googleIcon: {&#10;    width: 28,&#10;    height: 28,&#10;    marginRight: 12,&#10;    resizeMode: 'contain',&#10;  },&#10;  googleText: {&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;    color: '#222',&#10;  },&#10;});&#10;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;import { Ionicons } from '@expo/vector-icons';&#10;&#10;export default function SignupScreen() {&#10;  const router = useRouter();&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {/* Header */}&#10;      &lt;View style={styles.header}&gt;&#10;        &lt;TouchableOpacity onPress={() =&gt; router.back()}&gt;&#10;          &lt;Ionicons name=&quot;arrow-back&quot; size={28} color=&quot;#222&quot; /&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;        &lt;Text style={styles.headerTitle}&gt;회원가입&lt;/Text&gt;&#10;        &lt;View style={{ width: 28 }} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Progress Bar */}&#10;      &lt;View style={styles.progressBarBg}&gt;&#10;        &lt;View style={styles.progressBar} /&gt;&#10;      &lt;/View&gt;&#10;      {/* Title */}&#10;      &lt;Text style={styles.title}&gt;로그인할 방식을 선택해주세요&lt;/Text&gt;&#10;      {/* Kakao Login Button */}&#10;      &lt;TouchableOpacity style={styles.kakaoBtn}&gt;&#10;        &lt;Text style={styles.kakaoText}&gt;카카오톡으로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;      {/* Google Login Button */}&#10;      &lt;TouchableOpacity style={styles.googleBtn}&gt;&#10;        &lt;Text style={styles.googleText}&gt;Google로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    backgroundColor: '#fff',&#10;    paddingHorizontal: 0,&#10;  },&#10;  header: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;    paddingTop: 56,&#10;    paddingHorizontal: 20,&#10;    marginBottom: 16,&#10;  },&#10;  headerTitle: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;  },&#10;  progressBarBg: {&#10;    height: 10,&#10;    backgroundColor: '#F1F3F6',&#10;    borderRadius: 5,&#10;    marginHorizontal: 20,&#10;    marginBottom: 36,&#10;    marginTop: 0,&#10;  },&#10;  progressBar: {&#10;    width: '25%',&#10;    height: 10,&#10;    backgroundColor: '#1976F7',&#10;    borderRadius: 5,&#10;  },&#10;  title: {&#10;    fontSize: 20,&#10;    fontWeight: 'bold',&#10;    color: '#111',&#10;    marginTop: 24,&#10;    marginBottom: 48,&#10;    alignSelf: 'center',&#10;  },&#10;  kakaoBtn: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#FEE500',&#10;    borderRadius: 18,&#10;    paddingVertical: 24,&#10;    paddingHorizontal: 24,&#10;    marginHorizontal: 20,&#10;    marginBottom: 24,&#10;    justifyContent: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.04,&#10;    shadowRadius: 2,&#10;    elevation: 2,&#10;  },&#10;  kakaoText: {&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;    color: '#3C1E1E',&#10;  },&#10;  googleBtn: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#fff',&#10;    borderRadius: 18,&#10;    paddingVertical: 24,&#10;    paddingHorizontal: 24,&#10;    marginHorizontal: 20,&#10;    borderWidth: 1.5,&#10;    borderColor: '#D1D5DB',&#10;    justifyContent: 'center',&#10;    shadowColor: '#000',&#10;    shadowOpacity: 0.04,&#10;    shadowRadius: 2,&#10;    elevation: 2,&#10;  },&#10;  googleText: {&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;    color: '#222',&#10;  },&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/AuthInput.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/AuthInput.tsx" />
              <option name="originalContent" value="import React, { useState } from 'react';&#10;import { View, TextInput, Text, StyleSheet, TextInputProps } from 'react-native';&#10;import { Ionicons } from '@expo/vector-icons';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;interface AuthInputProps extends TextInputProps {&#10;  label: string;&#10;  icon?: keyof typeof Ionicons.glyphMap;&#10;  error?: string | null;&#10;  isFocused?: boolean;&#10;}&#10;&#10;const AuthInput: React.FC&lt;AuthInputProps&gt; = ({ label, icon, error, isFocused, secureTextEntry, ...props }) =&gt; {&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const isPassword = !!secureTextEntry;&#10;&#10;  const iconColor = error ? Colors.danger : isFocused ? Colors.primary : Colors.mediumGray;&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {!!label &amp;&amp; &lt;Text style={styles.label}&gt;{label}&lt;/Text&gt;}&#10;      &lt;View&#10;        style={[&#10;          styles.inputContainer,&#10;          isFocused &amp;&amp; styles.inputContainerFocused,&#10;          error &amp;&amp; styles.inputContainerError,&#10;        ]}&#10;      &gt;&#10;        {icon &amp;&amp; &lt;Ionicons name={icon} size={20} color={iconColor} style={styles.icon} /&gt;}&#10;        &lt;TextInput&#10;          style={styles.input}&#10;          placeholderTextColor={Colors.placeholder}&#10;          secureTextEntry={isPassword &amp;&amp; !showPassword}&#10;          {...props}&#10;        /&gt;&#10;        {isPassword &amp;&amp; (&#10;          &lt;Ionicons&#10;            name={showPassword ? 'eye-off' : 'eye'}&#10;            size={20}&#10;            color={Colors.mediumGray}&#10;            style={styles.eyeIcon}&#10;            onPress={() =&gt; setShowPassword((prev) =&gt; !prev)}&#10;          /&gt;&#10;        )}&#10;      &lt;/View&gt;&#10;      {error &amp;&amp; &lt;Text style={styles.errorText}&gt;{error}&lt;/Text&gt;}&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    marginBottom: 20,&#10;  },&#10;  label: {&#10;    fontSize: 14,&#10;    fontWeight: '500',&#10;    color: Colors.darkGray,&#10;    marginBottom: 8,&#10;  },&#10;  inputContainer: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: Colors.lightGray,&#10;    borderRadius: 14,&#10;    borderWidth: 1.5,&#10;    borderColor: 'transparent',&#10;    paddingHorizontal: 16,&#10;    height: 54,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 1 },&#10;    shadowOpacity: 0.06,&#10;    shadowRadius: 2,&#10;  },&#10;  inputContainerFocused: {&#10;    borderColor: Colors.primary,&#10;    backgroundColor: '#fff',&#10;    shadowOpacity: 0.12,&#10;    shadowRadius: 4,&#10;  },&#10;  inputContainerError: {&#10;    borderColor: Colors.danger,&#10;  },&#10;  icon: {&#10;    marginRight: 10,&#10;  },&#10;  input: {&#10;    flex: 1,&#10;    fontSize: 16,&#10;    color: Colors.text,&#10;    paddingVertical: 10,&#10;  },&#10;  eyeIcon: {&#10;    marginLeft: 8,&#10;  },&#10;  errorText: {&#10;    marginTop: 6,&#10;    fontSize: 12,&#10;    color: Colors.danger,&#10;    fontWeight: '500',&#10;  },&#10;});&#10;&#10;export default AuthInput;&#10;" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;import { View, TextInput, Text, StyleSheet, TextInputProps } from 'react-native';&#10;import { Ionicons } from '@expo/vector-icons';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;interface AuthInputProps extends TextInputProps {&#10;  label: string;&#10;  icon?: keyof typeof Ionicons.glyphMap;&#10;  error?: string | null;&#10;  isFocused?: boolean;&#10;}&#10;&#10;const AuthInput: React.FC&lt;AuthInputProps&gt; = ({ label, icon, error, isFocused, secureTextEntry, ...props }) =&gt; {&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const isPassword = !!secureTextEntry;&#10;&#10;  const iconColor = error ? Colors.danger : isFocused ? Colors.primary : Colors.mediumGray;&#10;&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {!!label &amp;&amp; &lt;Text style={styles.label}&gt;{label}&lt;/Text&gt;}&#10;      &lt;View&#10;        style={[&#10;          styles.inputContainer,&#10;          isFocused &amp;&amp; styles.inputContainerFocused,&#10;          error &amp;&amp; styles.inputContainerError,&#10;        ]}&#10;      &gt;&#10;        {icon &amp;&amp; &lt;Ionicons name={icon} size={22} color={iconColor} style={styles.icon} /&gt;}&#10;        &lt;TextInput&#10;          style={styles.input}&#10;          placeholderTextColor={Colors.placeholder || '#B0B8C1'}&#10;          secureTextEntry={isPassword &amp;&amp; !showPassword}&#10;          {...props}&#10;        /&gt;&#10;        {isPassword &amp;&amp; (&#10;          &lt;Ionicons&#10;            name={showPassword ? 'eye-off' : 'eye'}&#10;            size={20}&#10;            color={Colors.mediumGray}&#10;            style={styles.eyeIcon}&#10;            onPress={() =&gt; setShowPassword((prev) =&gt; !prev)}&#10;          /&gt;&#10;        )}&#10;      &lt;/View&gt;&#10;      {error &amp;&amp; &lt;Text style={styles.errorText}&gt;{error}&lt;/Text&gt;}&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    marginBottom: 22,&#10;  },&#10;  label: {&#10;    fontSize: 15,&#10;    fontWeight: '600',&#10;    color: Colors.darkGray,&#10;    marginBottom: 7,&#10;    marginLeft: 2,&#10;  },&#10;  inputContainer: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    backgroundColor: '#F7F8FA',&#10;    borderRadius: 14,&#10;    borderWidth: 1.5,&#10;    borderColor: 'transparent',&#10;    paddingHorizontal: 16,&#10;    height: 54,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 1 },&#10;    shadowOpacity: 0.04,&#10;    shadowRadius: 2,&#10;    transitionProperty: 'border-color, box-shadow',&#10;    transitionDuration: '0.2s',&#10;  },&#10;  inputContainerFocused: {&#10;    borderColor: Colors.primary,&#10;    backgroundColor: '#fff',&#10;    shadowOpacity: 0.10,&#10;    shadowRadius: 4,&#10;  },&#10;  inputContainerError: {&#10;    borderColor: Colors.danger,&#10;    backgroundColor: '#FFF6F6',&#10;  },&#10;  icon: {&#10;    marginRight: 10,&#10;  },&#10;  input: {&#10;    flex: 1,&#10;    fontSize: 17,&#10;    color: Colors.text,&#10;    paddingVertical: 10,&#10;    backgroundColor: 'transparent',&#10;  },&#10;  eyeIcon: {&#10;    marginLeft: 8,&#10;  },&#10;  errorText: {&#10;    marginTop: 6,&#10;    fontSize: 13,&#10;    color: Colors.danger,&#10;    fontWeight: '500',&#10;    marginLeft: 2,&#10;  },&#10;});&#10;&#10;export default AuthInput;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/CustomNavbar.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/CustomNavbar.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';&#10;import { useRouter } from 'expo-router';&#10;&#10;// 네비바 아이콘 예시 (실제 경로에 맞게 수정 필요)&#10;const icons = [&#10;  require('../assets/images/home.png'),&#10;  require('../assets/images/search.png'),&#10;  require('../assets/images/plus.png'),&#10;  require('../assets/images/alert.png'),&#10;  require('../assets/images/user.png'),&#10;];&#10;&#10;const labels = ['홈', '검색', '추가', '알림', '내정보'];&#10;&#10;export default function CustomNavbar({ activeIndex = 0, onTabPress }: { activeIndex?: number; onTabPress?: (idx: number) =&gt; void }) {&#10;  const router = useRouter();&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      {icons.map((icon, idx) =&gt; (&#10;        &lt;TouchableOpacity&#10;          key={idx}&#10;          style={[styles.tab, activeIndex === idx &amp;&amp; styles.activeTab]}&#10;          onPress={() =&gt; {&#10;            if (onTabPress) onTabPress(idx);&#10;            // router.push(...) 등 라우팅 처리 가능&#10;          }}&#10;          activeOpacity={0.7}&#10;        &gt;&#10;          &lt;Image source={icon} style={[styles.icon, activeIndex === idx &amp;&amp; styles.activeIcon]} /&gt;&#10;          &lt;Text style={[styles.label, activeIndex === idx &amp;&amp; styles.activeLabel]}&gt;{labels[idx]}&lt;/Text&gt;&#10;        &lt;/TouchableOpacity&gt;&#10;      ))}&#10;    &lt;/View&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flexDirection: 'row',&#10;    backgroundColor: '#fff',&#10;    borderTopLeftRadius: 24,&#10;    borderTopRightRadius: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: -2 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 8,&#10;    paddingBottom: 12,&#10;    paddingTop: 8,&#10;    paddingHorizontal: 8,&#10;    alignItems: 'center',&#10;    justifyContent: 'space-between',&#10;  },&#10;  tab: {&#10;    flex: 1,&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    paddingVertical: 4,&#10;    borderRadius: 16,&#10;  },&#10;  activeTab: {&#10;    backgroundColor: '#F5F5F5',&#10;  },&#10;  icon: {&#10;    width: 28,&#10;    height: 28,&#10;    marginBottom: 2,&#10;    opacity: 0.7,&#10;  },&#10;  activeIcon: {&#10;    opacity: 1,&#10;  },&#10;  label: {&#10;    fontSize: 12,&#10;    color: '#888',&#10;    fontWeight: '500',&#10;  },&#10;  activeLabel: {&#10;    color: '#222',&#10;    fontWeight: 'bold',&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/LargeButton.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/LargeButton.tsx" />
              <option name="updatedContent" value="import React from 'react';&#10;import { TouchableOpacity, Text, StyleSheet, View, Image } from 'react-native';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;interface LargeButtonProps {&#10;  label: string;&#10;  onPress: () =&gt; void;&#10;  iconType?: 'kakao' | 'google';&#10;}&#10;&#10;export default function LargeButton({ label, onPress, iconType }: LargeButtonProps) {&#10;  let icon = null;&#10;  let buttonStyle = [styles.button];&#10;  let textStyle = [styles.text];&#10;&#10;  if (iconType === 'kakao') {&#10;    buttonStyle.push(styles.kakaoButton);&#10;    textStyle.push(styles.kakaoText);&#10;    icon = (&#10;      &lt;View style={styles.kakaoIconWrap}&gt;&lt;Text style={styles.kakaoIcon}&gt;TALK&lt;/Text&gt;&lt;/View&gt;&#10;    );&#10;  } else if (iconType === 'google') {&#10;    buttonStyle.push(styles.googleButton);&#10;    icon = (&#10;      &lt;Image source={{uri: 'https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'}} style={styles.googleIcon} /&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;TouchableOpacity style={buttonStyle} onPress={onPress}&gt;&#10;      {icon}&#10;      &lt;Text style={textStyle}&gt;{label}&lt;/Text&gt;&#10;    &lt;/TouchableOpacity&gt;&#10;  );&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  button: {&#10;    width: '100%',&#10;    backgroundColor: Colors.primary,&#10;    borderRadius: 20,&#10;    paddingVertical: 32,&#10;    alignItems: 'center',&#10;    flexDirection: 'row',&#10;    justifyContent: 'center',&#10;    marginBottom: 32,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.12,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  text: {&#10;    color: '#fff',&#10;    fontSize: 24,&#10;    fontWeight: 'bold',&#10;  },&#10;  kakaoButton: {&#10;    backgroundColor: '#FEE500',&#10;    marginBottom: 24,&#10;  },&#10;  kakaoText: {&#10;    color: '#3C1E1E',&#10;  },&#10;  kakaoIconWrap: {&#10;    backgroundColor: '#3C1E1E',&#10;    borderRadius: 12,&#10;    paddingHorizontal: 10,&#10;    paddingVertical: 2,&#10;    marginRight: 10,&#10;  },&#10;  kakaoIcon: {&#10;    color: '#fff',&#10;    fontWeight: 'bold',&#10;    fontSize: 14,&#10;  },&#10;  googleButton: {&#10;    backgroundColor: '#fff',&#10;    borderWidth: 1,&#10;    borderColor: '#E5E7EB',&#10;    marginBottom: 24,&#10;  },&#10;  googleIcon: {&#10;    width: 24,&#10;    height: 24,&#10;    marginRight: 10,&#10;  },&#10;});&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/NavigationButton.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/NavigationButton.tsx" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/SocialLoginButton.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/SocialLoginButton.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { TouchableOpacity, View, Text, Image, StyleSheet } from 'react-native';&#10;&#10;interface SocialLoginButtonProps {&#10;  type: 'kakao' | 'google';&#10;  onPress: () =&gt; void;&#10;}&#10;&#10;export default function SocialLoginButton({ type, onPress }: SocialLoginButtonProps) {&#10;  if (type === 'kakao') {&#10;    return (&#10;      &lt;TouchableOpacity style={styles.kakaoButton} onPress={onPress}&gt;&#10;        &lt;View style={styles.kakaoIconWrap}&gt;&lt;Text style={styles.kakaoIcon}&gt;TALK&lt;/Text&gt;&lt;/View&gt;&#10;        &lt;Text style={styles.kakaoText}&gt;카카오톡으로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    );&#10;  }&#10;  if (type === 'google') {&#10;    return (&#10;      &lt;TouchableOpacity style={styles.googleButton} onPress={onPress}&gt;&#10;        &lt;Image source={{uri: 'https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'}} style={styles.googleIcon} /&gt;&#10;        &lt;Text style={styles.googleText}&gt;Google로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    );&#10;  }&#10;  return null;&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  kakaoButton: {&#10;    width: '100%',&#10;    backgroundColor: '#FEE500',&#10;    borderRadius: 16,&#10;    paddingVertical: 24,&#10;    alignItems: 'center',&#10;    flexDirection: 'row',&#10;    justifyContent: 'center',&#10;    marginBottom: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 1,&#10;  },&#10;  kakaoIconWrap: {&#10;    backgroundColor: '#3C1E1E',&#10;    borderRadius: 12,&#10;    paddingHorizontal: 10,&#10;    paddingVertical: 2,&#10;    marginRight: 10,&#10;  },&#10;  kakaoIcon: {&#10;    color: '#fff',&#10;    fontWeight: 'bold',&#10;    fontSize: 14,&#10;  },&#10;  kakaoText: {&#10;    color: '#3C1E1E',&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;  },&#10;  googleButton: {&#10;    width: '100%',&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    paddingVertical: 24,&#10;    alignItems: 'center',&#10;    flexDirection: 'row',&#10;    justifyContent: 'center',&#10;    borderWidth: 1,&#10;    borderColor: '#E5E7EB',&#10;    marginBottom: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 1,&#10;  },&#10;  googleIcon: {&#10;    width: 24,&#10;    height: 24,&#10;    marginRight: 10,&#10;  },&#10;  googleText: {&#10;    color: '#222',&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;  },&#10;});&#10;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import { TouchableOpacity, View, Text, Image, StyleSheet } from 'react-native';&#10;&#10;interface SocialLoginButtonProps {&#10;  type: 'kakao' | 'google' | 'guardian' | 'ward';&#10;  onPress: () =&gt; void;&#10;}&#10;&#10;export default function SocialLoginButton({ type, onPress }: SocialLoginButtonProps) {&#10;  if (type === 'kakao') {&#10;    return (&#10;      &lt;TouchableOpacity style={styles.kakaoButton} onPress={onPress}&gt;&#10;        &lt;View style={styles.kakaoIconWrap}&gt;&lt;Text style={styles.kakaoIcon}&gt;TALK&lt;/Text&gt;&lt;/View&gt;&#10;        &lt;Text style={styles.kakaoText}&gt;카카오톡으로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    );&#10;  }&#10;  if (type === 'google') {&#10;    return (&#10;      &lt;TouchableOpacity style={styles.googleButton} onPress={onPress}&gt;&#10;        &lt;Image source={{uri: 'https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'}} style={styles.googleIcon} /&gt;&#10;        &lt;Text style={styles.googleText}&gt;Google로 로그인&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    );&#10;  }&#10;  if (type === 'guardian' || type === 'ward') {&#10;    return (&#10;      &lt;TouchableOpacity&#10;        style={styles.roleButton}&#10;        onPress={onPress}&#10;      &gt;&#10;        &lt;Text style={styles.roleButtonText}&gt;{type === 'guardian' ? '보호자' : '보호 대상자'}&lt;/Text&gt;&#10;      &lt;/TouchableOpacity&gt;&#10;    );&#10;  }&#10;  return null;&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;  kakaoButton: {&#10;    width: '100%',&#10;    backgroundColor: '#FEE500',&#10;    borderRadius: 16,&#10;    paddingVertical: 24,&#10;    alignItems: 'center',&#10;    flexDirection: 'row',&#10;    justifyContent: 'center',&#10;    marginBottom: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 1,&#10;  },&#10;  kakaoIconWrap: {&#10;    backgroundColor: '#3C1E1E',&#10;    borderRadius: 12,&#10;    paddingHorizontal: 10,&#10;    paddingVertical: 2,&#10;    marginRight: 10,&#10;  },&#10;  kakaoIcon: {&#10;    color: '#fff',&#10;    fontWeight: 'bold',&#10;    fontSize: 14,&#10;  },&#10;  kakaoText: {&#10;    color: '#3C1E1E',&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;  },&#10;  googleButton: {&#10;    width: '100%',&#10;    backgroundColor: '#fff',&#10;    borderRadius: 16,&#10;    paddingVertical: 24,&#10;    alignItems: 'center',&#10;    flexDirection: 'row',&#10;    justifyContent: 'center',&#10;    borderWidth: 1,&#10;    borderColor: '#E5E7EB',&#10;    marginBottom: 24,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.08,&#10;    shadowRadius: 8,&#10;    elevation: 1,&#10;  },&#10;  googleIcon: {&#10;    width: 24,&#10;    height: 24,&#10;    marginRight: 10,&#10;  },&#10;  googleText: {&#10;    color: '#222',&#10;    fontSize: 18,&#10;    fontWeight: 'bold',&#10;  },&#10;  roleButton: {&#10;    width: '100%',&#10;    backgroundColor: '#007AFF',&#10;    borderRadius: 20,&#10;    paddingVertical: 32,&#10;    alignItems: 'center',&#10;    marginBottom: 32,&#10;    shadowColor: '#000',&#10;    shadowOffset: { width: 0, height: 4 },&#10;    shadowOpacity: 0.12,&#10;    shadowRadius: 8,&#10;    elevation: 2,&#10;  },&#10;  roleButtonText: {&#10;    color: '#fff',&#10;    fontSize: 24,&#10;    fontWeight: 'bold',&#10;  },&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/SocialLoginButtons.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/SocialLoginButtons.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;const SocialLoginButton = ({ onPress, logo, text, style, textStyle }) =&gt; (&#10;  &lt;TouchableOpacity onPress={onPress} style={[styles.button, style]} activeOpacity={0.8}&gt;&#10;    &lt;Image source={logo} style={styles.logo} /&gt;&#10;    &lt;Text style={[styles.text, textStyle]}&gt;{text}&lt;/Text&gt;&#10;  &lt;/TouchableOpacity&gt;&#10;);&#10;&#10;const SocialLoginButtons = () =&gt; {&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      &lt;SocialLoginButton&#10;        onPress={() =&gt; console.log('Kakao Login')}&#10;        // logo={require('@/assets/images/kakao_logo.png')} // Add your logo paths&#10;        text=&quot;카카오로 시작하기&quot;&#10;        style={styles.kakaoButton}&#10;        textStyle={styles.kakaoText}&#10;      /&gt;&#10;      &lt;SocialLoginButton&#10;        onPress={() =&gt; console.log('Naver Login')}&#10;        // logo={require('@/assets/images/naver_logo.png'))}&#10;        text=&quot;네이버로 시작하기&quot;&#10;        style={styles.naverButton}&#10;        textStyle={styles.naverText}&#10;      /&gt;&#10;      &lt;SocialLoginButton&#10;        onPress={() =&gt; console.log('Google Login')}&#10;        // logo={require('@/assets/images/google_logo.png'))}&#10;        text=&quot;구글로 시작하기&quot;&#10;        style={styles.googleButton}&#10;        textStyle={styles.googleText}&#10;      /&gt;&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    marginTop: 24,&#10;  },&#10;  button: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    height: 52,&#10;    borderRadius: 12,&#10;    marginBottom: 12,&#10;    paddingHorizontal: 16,&#10;  },&#10;  logo: {&#10;    width: 24,&#10;    height: 24,&#10;    marginRight: 12,&#10;  },&#10;  text: {&#10;    fontSize: 16,&#10;    fontWeight: '500',&#10;  },&#10;  kakaoButton: {&#10;    backgroundColor: '#FEE500',&#10;  },&#10;  kakaoText: {&#10;    color: '#191919',&#10;  },&#10;  naverButton: {&#10;    backgroundColor: '#03C75A',&#10;  },&#10;  naverText: {&#10;    color: '#FFFFFF',&#10;  },&#10;  googleButton: {&#10;    backgroundColor: '#FFFFFF',&#10;    borderWidth: 1,&#10;    borderColor: Colors.lightGray,&#10;  },&#10;  googleText: {&#10;    color: '#1F1F1F',&#10;  },&#10;});&#10;&#10;export default SocialLoginButtons;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';&#10;import { Colors } from '@/constants/Colors';&#10;&#10;const SocialLoginButton = ({ onPress, text, style, textStyle }) =&gt; (&#10;  &lt;TouchableOpacity onPress={onPress} style={[styles.button, style]} activeOpacity={0.8}&gt;&#10;    &lt;Text style={[styles.text, textStyle]}&gt;{text}&lt;/Text&gt;&#10;  &lt;/TouchableOpacity&gt;&#10;);&#10;&#10;const SocialLoginButtons = () =&gt; {&#10;  return (&#10;    &lt;View style={styles.container}&gt;&#10;      &lt;SocialLoginButton&#10;        onPress={() =&gt; console.log('Kakao Login')}&#10;        text=&quot;카카오로 시작하기&quot;&#10;        style={styles.kakaoButton}&#10;        textStyle={styles.kakaoText}&#10;      /&gt;&#10;      &lt;SocialLoginButton&#10;        onPress={() =&gt; console.log('Naver Login')}&#10;        text=&quot;네이버로 시작하기&quot;&#10;        style={styles.naverButton}&#10;        textStyle={styles.naverText}&#10;      /&gt;&#10;      &lt;SocialLoginButton&#10;        onPress={() =&gt; console.log('Google Login')}&#10;        text=&quot;구글로 시작하기&quot;&#10;        style={styles.googleButton}&#10;        textStyle={styles.googleText}&#10;      /&gt;&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    marginTop: 24,&#10;  },&#10;  button: {&#10;    flexDirection: 'row',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    height: 52,&#10;    borderRadius: 12,&#10;    marginBottom: 12,&#10;    paddingHorizontal: 16,&#10;  },&#10;  text: {&#10;    fontSize: 16,&#10;    fontWeight: '500',&#10;  },&#10;  kakaoButton: {&#10;    backgroundColor: '#FEE500',&#10;  },&#10;  kakaoText: {&#10;    color: '#191919',&#10;  },&#10;  naverButton: {&#10;    backgroundColor: '#03C75A',&#10;  },&#10;  naverText: {&#10;    color: '#FFFFFF',&#10;  },&#10;  googleButton: {&#10;    backgroundColor: '#FFFFFF',&#10;    borderWidth: 1,&#10;    borderColor: Colors.lightGray,&#10;  },&#10;  googleText: {&#10;    color: '#1F1F1F',&#10;  },&#10;});&#10;&#10;export default SocialLoginButtons;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>